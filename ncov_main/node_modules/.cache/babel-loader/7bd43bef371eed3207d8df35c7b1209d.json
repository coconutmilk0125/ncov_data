{"remainingRequest":"/Users/uu/Desktop/vueDataV-master/node_modules/babel-loader/lib/index.js!/Users/uu/Desktop/vueDataV-master/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/uu/Desktop/vueDataV-master/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/uu/Desktop/vueDataV-master/src/components/pyramid/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/uu/Desktop/vueDataV-master/src/components/pyramid/index.vue","mtime":1593573003656},{"path":"/Users/uu/Desktop/vueDataV-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/uu/Desktop/vueDataV-master/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/uu/Desktop/vueDataV-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/uu/Desktop/vueDataV-master/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZnVuY3Rpb24ubmFtZSI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnJlZ2V4cC5leGVjIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLnJlcGxhY2UiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcuc3BsaXQiOwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwppbXBvcnQgZWNoYXJ0cyBmcm9tICJlY2hhcnRzIjsgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXVudXNlZC12YXJzCgppbXBvcnQgYXhpb3MgZnJvbSAnYXhpb3MnOwppbXBvcnQgJy4uLy4uLy4uL25vZGVfbW9kdWxlcy9lY2hhcnRzL21hcC9qcy93b3JsZC5qcyc7CmltcG9ydCBoYWxsb3dlZW4gZnJvbSAnLi4vLi4vYXNzZXRzL2pzL3B1cnBsZS1wYXNzaW9uJzsgLy9pbXBvcnQgJy4uLy4uL25vZGVfbW9kdWxlcy9lY2hhcnRzL21hcC9qcy9jaGluYS5qcycgLy8g5byV5YWl5Lit5Zu95Zyw5Zu+5pWw5o2uCgpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogInB5cmFtaWQiLAogIHByb3BzOiBbInVzZXJKc29uIl0sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGNoYXJ0OiBudWxsLAogICAgICBsaXN0ZGF0YTogW10KICAgIH07CiAgfSwKICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkgewogICAgdGhpcy5jaGluYUNvbmZpZ3VyZSgpOwogIH0sCiAgYmVmb3JlRGVzdHJveTogZnVuY3Rpb24gYmVmb3JlRGVzdHJveSgpIHsKICAgIGlmICghdGhpcy5jaGFydCkgewogICAgICByZXR1cm47CiAgICB9CgogICAgdGhpcy5jaGFydC5kaXNwb3NlKCk7CiAgICB0aGlzLmNoYXJ0ID0gbnVsbDsKICB9LAogIG1ldGhvZHM6IHsKICAgIGNoaW5hQ29uZmlndXJlOiBmdW5jdGlvbiBjaGluYUNvbmZpZ3VyZSgpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgIHZhciBpbnN0YW5jZSA9IGF4aW9zLmNyZWF0ZSh7CiAgICAgICAgaGVhZGVyczogewogICAgICAgICAgJ2NvbnRlbnQtdHlwZSc6ICdhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWQnCiAgICAgICAgfQogICAgICB9KTsKICAgICAgaW5zdGFuY2UucG9zdCgnaHR0cDovL2xvY2FsaG9zdDo4MDgwL2N1cnJlbnRDb3VudHJ5Q29uZmlybWVkQXBpJyAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tdW5kZWYKICAgICAgKS50aGVuKGZ1bmN0aW9uIChyZXNwb25zZSkgewogICAgICAgIGNvbnNvbGUubG9nKHJlc3BvbnNlLmRhdGEpOwogICAgICAgIHZhciBkYXRhayA9IHJlc3BvbnNlLmRhdGE7CiAgICAgICAgdmFyIGxlbiA9IHJlc3BvbnNlLmRhdGEubGVuZ3RoOyAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tdW5kZWYKCiAgICAgICAgdmFyIGxpc3RkYXRhID0gW107IC8vICAgICAgY29uc29sZS5sb2codGhpcy5saXN0ZGF0YSk7CgogICAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgbGVuOyBpKyspIHsKICAgICAgICAgIHZhciBpbmZvID0ge307CiAgICAgICAgICBpbmZvLm5hbWUgPSBkYXRha1tpXS5uYW1lOwogICAgICAgICAgaW5mby52YWx1ZSA9IGRhdGFrW2ldLnZhbHVlOwogICAgICAgICAgbGlzdGRhdGEucHVzaChpbmZvKTsgLy/mioppbmZv6YeM6Z2i55qE5pWw5o2u6L+95Yqg5YiwZGF0YemHjAogICAgICAgIH0KCiAgICAgICAgY29uc29sZS5sb2cobGlzdGRhdGEpOwogICAgICAgIHZhciBteUNoYXJ0ID0gZWNoYXJ0cy5pbml0KF90aGlzLiRyZWZzLm15RWNoYXJ0LCAncHVycGxlLXBhc3Npb24nKTsgLy/ov5nph4zmmK/kuLrkuobojrflvpflrrnlmajmiYDlnKjkvY3nva4KCiAgICAgICAgd2luZG93Lm9ucmVzaXplID0gbXlDaGFydC5yZXNpemU7CiAgICAgICAgbXlDaGFydC5zZXRPcHRpb24oewogICAgICAgICAgYmFja2dyb3VuZENvbG9yOiAndHJhbnNwYXJlbnQnLAogICAgICAgICAgdGl0bGU6IHsKICAgICAgICAgICAgdGV4dDogJ+WFqOeQg+eWq+aDheamguWGtScsCiAgICAgICAgICAgIHg6ICdjZW50ZXInCiAgICAgICAgICB9LAogICAgICAgICAgdG9vbHRpcDogewogICAgICAgICAgICB0cmlnZ2VyOiAnaXRlbScsCiAgICAgICAgICAgIHNob3dEZWxheTogMCwKICAgICAgICAgICAgdHJhbnNpdGlvbkR1cmF0aW9uOiAwLjIsCiAgICAgICAgICAgIGZvcm1hdHRlcjogZnVuY3Rpb24gZm9ybWF0dGVyKHBhcmFtcykgewogICAgICAgICAgICAgIHZhciB2YWx1ZSA9IChwYXJhbXMudmFsdWUgKyAnJykuc3BsaXQoJy4nKTsKICAgICAgICAgICAgICB2YWx1ZSA9IHZhbHVlWzBdLnJlcGxhY2UoLyhcZHsxLDN9KSg/PSg/OlxkezN9KSsoPyFcZCkpL2csICckMSwnKTsKICAgICAgICAgICAgICByZXR1cm4gcGFyYW1zLnNlcmllc05hbWUgKyAnPGJyLz4nICsgcGFyYW1zLm5hbWUgKyAnOiAnICsgdmFsdWU7CiAgICAgICAgICAgIH0KICAgICAgICAgIH0sCiAgICAgICAgICB2aXN1YWxNYXA6IHsKICAgICAgICAgICAgbGVmdDogJ3JpZ2h0JywKICAgICAgICAgICAgbWluOiAwLAogICAgICAgICAgICBtYXg6IDIwMDAwMCwKICAgICAgICAgICAgdGV4dDogWydIaWdoJywgJ0xvdyddLAogICAgICAgICAgICAvLyDmlofmnKzvvIzpu5jorqTkuLrmlbDlgLzmlofmnKwKICAgICAgICAgICAgY2FsY3VsYWJsZTogdHJ1ZQogICAgICAgICAgfSwKICAgICAgICAgIHNlcmllczogW3sKICAgICAgICAgICAgbmFtZTogJ+eOsOWtmOehruiviuS6uuaVsCcsCiAgICAgICAgICAgIHR5cGU6ICdtYXAnLAogICAgICAgICAgICByb2FtOiB0cnVlLAogICAgICAgICAgICBtYXA6ICd3b3JsZCcsCiAgICAgICAgICAgIGVtcGhhc2lzOiB7CiAgICAgICAgICAgICAgbGFiZWw6IHsKICAgICAgICAgICAgICAgIHNob3c6IHRydWUKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIC8vIOaWh+acrOS9jee9ruS/ruatowogICAgICAgICAgICB0ZXh0Rml4ZWQ6IHsKICAgICAgICAgICAgICBBbGFza2E6IFsyMCwgLTIwXQogICAgICAgICAgICB9LAogICAgICAgICAgICBkYXRhOiBsaXN0ZGF0YQogICAgICAgICAgfV0KICAgICAgICB9KTsKICAgICAgfSk7CiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["index.vue"],"names":[],"mappings":"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","sourcesContent":["<!--\n 描述: 金字塔动画\n 作者: Jack Chen\n 日期: 2020-04-19\n-->\n\n<template>\n  <div class=\"wrap-container trigle\">\n    <div class=\"echarts\">\n      <div :style=\"{height:'500px',width:'720px'}\" ref=\"myEchart\"></div>\n    </div>\n  </div>\n\n</template>\n\n<script>\n  import echarts from \"echarts\";\n  // eslint-disable-next-line no-unused-vars\n  import axios from 'axios';\n  import '../../../node_modules/echarts/map/js/world.js';\n  import halloween from '../../assets/js/purple-passion';\n  //import '../../node_modules/echarts/map/js/china.js' // 引入中国地图数据\n  export default {\n    name: \"pyramid\",\n    props: [\"userJson\"],\n    data() {\n      return {\n        chart: null,\n        listdata: []\n      };\n    },\n    mounted() {\n      this.chinaConfigure();\n    },\n    beforeDestroy() {\n      if (!this.chart) {\n        return;\n      }\n      this.chart.dispose();\n      this.chart = null;\n    },\n    methods: {\n      chinaConfigure() {\n        var instance = axios.create({ headers: {'content-type': 'application/x-www-form-urlencoded'} });\n        instance.post('http://localhost:8080/currentCountryConfirmedApi'\n                // eslint-disable-next-line no-undef\n        ).then(response => {\n          console.log(response.data);\n          var datak = response.data;\n          var len = response.data.length;\n          // eslint-disable-next-line no-undef\n          var listdata=[];\n          //      console.log(this.listdata);\n          for(var i=0;i<len;i++){\n            var info={};\n            info.name=datak[i].name;\n            info.value=datak[i].value;\n            listdata.push(info);\t//把info里面的数据追加到data里\n          }\n          console.log(listdata);\n          let myChart = echarts.init(this.$refs.myEchart,'purple-passion'); //这里是为了获得容器所在位置\n          window.onresize = myChart.resize;\n          myChart.setOption({\n            backgroundColor: 'transparent',\n            title: {\n              text: '全球疫情概况',\n              x: 'center'\n            },\n            tooltip: {\n              trigger: 'item',\n              showDelay: 0,\n              transitionDuration: 0.2,\n              formatter: function (params) {\n                var value = (params.value + '').split('.');\n                value = value[0].replace(/(\\d{1,3})(?=(?:\\d{3})+(?!\\d))/g, '$1,');\n                return params.seriesName + '<br/>' + params.name + ': ' + value;\n              }\n            },\n            visualMap: {\n              left: 'right',\n              min: 0,\n              max: 200000,\n              text: ['High', 'Low'],           // 文本，默认为数值文本\n              calculable: true,\n            },\n\n            series: [\n              {\n                name: '现存确诊人数',\n                type: 'map',\n                roam: true,\n                map: 'world',\n                emphasis: {\n                  label: {\n                    show: true\n                  }\n                },\n                // 文本位置修正\n                textFixed: {\n                  Alaska: [20, -20]\n                },\n                data: listdata\n              }\n            ]\n          });\n        });\n      }\n    }\n  }\n</script>\n\n<style lang=\"scss\" scoped>\n  .trigle {\n    left: 600px;\n    top: 100px;\n    width: 700px;\n    height: 500px;\n  }\n</style>\n"],"sourceRoot":"src/components/pyramid"}]}