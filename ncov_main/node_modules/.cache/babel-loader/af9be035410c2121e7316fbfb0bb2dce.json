{"remainingRequest":"/Users/uu/Desktop/ncov_before/node_modules/babel-loader/lib/index.js!/Users/uu/Desktop/ncov_before/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/uu/Desktop/ncov_before/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/uu/Desktop/ncov_before/src/components/companySummary/income.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/uu/Desktop/ncov_before/src/components/companySummary/income.vue","mtime":1593516853893},{"path":"/Users/uu/Desktop/ncov_before/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/uu/Desktop/ncov_before/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/uu/Desktop/ncov_before/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/uu/Desktop/ncov_before/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZnVuY3Rpb24ubmFtZSI7Ci8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCi8vCmltcG9ydCBlY2hhcnRzIGZyb20gImVjaGFydHMiOyAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tdW51c2VkLXZhcnMKCmltcG9ydCBheGlvcyBmcm9tICdheGlvcyc7CmltcG9ydCBoYWxsb3dlZW4gZnJvbSAnLi4vLi4vYXNzZXRzL2pzL3B1cnBsZS1wYXNzaW9uJzsgLy9pbXBvcnQgJy4uLy4uL25vZGVfbW9kdWxlcy9lY2hhcnRzL21hcC9qcy9jaGluYS5qcycgLy8g5byV5YWl5Lit5Zu95Zyw5Zu+5pWw5o2uCgpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogImluY29tZSIsCiAgcHJvcHM6IFsidXNlckpzb24iXSwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgY2hhcnQ6IG51bGwsCiAgICAgIGxpc3RkYXRhOiBbXQogICAgfTsKICB9LAogIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7CiAgICB0aGlzLmNoaW5hQ29uZmlndXJlKCk7CiAgfSwKICBiZWZvcmVEZXN0cm95OiBmdW5jdGlvbiBiZWZvcmVEZXN0cm95KCkgewogICAgaWYgKCF0aGlzLmNoYXJ0KSB7CiAgICAgIHJldHVybjsKICAgIH0KCiAgICB0aGlzLmNoYXJ0LmRpc3Bvc2UoKTsKICAgIHRoaXMuY2hhcnQgPSBudWxsOwogIH0sCiAgbWV0aG9kczogewogICAgY2hpbmFDb25maWd1cmU6IGZ1bmN0aW9uIGNoaW5hQ29uZmlndXJlKCkgewogICAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgICAgdmFyIGluc3RhbmNlID0gYXhpb3MuY3JlYXRlKHsKICAgICAgICBoZWFkZXJzOiB7CiAgICAgICAgICAnY29udGVudC10eXBlJzogJ2FwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZCcKICAgICAgICB9CiAgICAgIH0pOwogICAgICBpbnN0YW5jZS5wb3N0KCdodHRwOi8vbG9jYWxob3N0OjgwODAvYWxsRGF0ZUNvbmZpcm1lZEFwaScgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXVuZGVmCiAgICAgICkudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHsKICAgICAgICBjb25zb2xlLmxvZyhyZXNwb25zZS5kYXRhKTsKICAgICAgICB2YXIgZGF0YWsgPSByZXNwb25zZS5kYXRhOwogICAgICAgIHZhciBsZW4gPSByZXNwb25zZS5kYXRhLmxlbmd0aDsgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXVuZGVmCgogICAgICAgIHZhciBsaXN0ZGF0YSA9IFtdOyAvLyAgICAgIGNvbnNvbGUubG9nKHRoaXMubGlzdGRhdGEpOwoKICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGxlbjsgaSsrKSB7CiAgICAgICAgICB2YXIgaW5mbyA9IHt9OwogICAgICAgICAgaW5mby5uYW1lID0gZGF0YWtbaV0ubmFtZTsKICAgICAgICAgIGluZm8udHlwZSA9ICdsaW5lJzsKICAgICAgICAgIGluZm8uYXJlYVN0eWxlID0ge307CiAgICAgICAgICBpbmZvLmRhdGEgPSBkYXRha1tpXS5kYXRhOwogICAgICAgICAgbGlzdGRhdGEucHVzaChpbmZvKTsgLy/mioppbmZv6YeM6Z2i55qE5pWw5o2u6L+95Yqg5YiwZGF0YemHjAogICAgICAgIH0KCiAgICAgICAgY29uc29sZS5sb2cobGlzdGRhdGEpOwogICAgICAgIHZhciBteUNoYXJ0ID0gZWNoYXJ0cy5pbml0KF90aGlzLiRyZWZzLm15RWNoYXJ0LCAncHVycGxlLXBhc3Npb24nKTsgLy/ov5nph4zmmK/kuLrkuobojrflvpflrrnlmajmiYDlnKjkvY3nva4KCiAgICAgICAgd2luZG93Lm9ucmVzaXplID0gbXlDaGFydC5yZXNpemU7CiAgICAgICAgbXlDaGFydC5zZXRPcHRpb24oewogICAgICAgICAgYmFja2dyb3VuZENvbG9yOiAncmdiYSgxMTYsMTE2LDEzMCwxKScsCiAgICAgICAgICAvLyAgICB0aXRsZTogewogICAgICAgICAgLy8gICAgICB0ZXh0OiAn55ar5oOF5oOF5Ya1JywKICAgICAgICAgIC8vICAgICAgIHg6ICdjZW50ZXInCiAgICAgICAgICAvLyAgICB9LAogICAgICAgICAgZ3JpZDogewogICAgICAgICAgICB0b3A6ICc1JScsCiAgICAgICAgICAgIGxlZnQ6ICcyJScsCiAgICAgICAgICAgIHJpZ2h0OiAnMiUnLAogICAgICAgICAgICBib3R0b206ICcwJScsCiAgICAgICAgICAgIGNvbnRhaW5MYWJlbDogdHJ1ZQogICAgICAgICAgfSwKICAgICAgICAgIHRvb2x0aXA6IHsKICAgICAgICAgICAgdHJpZ2dlcjogJ2F4aXMnLAogICAgICAgICAgICB0cmFuc2l0aW9uRHVyYXRpb246IDAuMiwKICAgICAgICAgICAgYXhpc1BvaW50ZXI6IHsKICAgICAgICAgICAgICB0eXBlOiAnY3Jvc3MnLAogICAgICAgICAgICAgIGxhYmVsOiB7Ly8gICBiYWNrZ3JvdW5kQ29sb3I6ICcjNmE3OTg1JwogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICAgfSwKICAgICAgICAgIGxlZ2VuZDogewogICAgICAgICAgICB0b3A6ICcyJScsCiAgICAgICAgICAgIGRhdGE6IFsn6Iux5Zu9JywgJ+WNsOW6picsICfkv4TnvZfmlq8nLCAn5be06KW/JywgJ+e+juWbvSddLAogICAgICAgICAgICBsZWZ0OiAwCiAgICAgICAgICB9LAogICAgICAgICAgdG9vbGJveDogewogICAgICAgICAgICBmZWF0dXJlOiB7CiAgICAgICAgICAgICAgc2F2ZUFzSW1hZ2U6IHt9CiAgICAgICAgICAgIH0KICAgICAgICAgIH0sCiAgICAgICAgICB4QXhpczogW3sKICAgICAgICAgICAgdHlwZTogJ2NhdGVnb3J5JywKICAgICAgICAgICAgYm91bmRhcnlHYXA6IGZhbHNlLAogICAgICAgICAgICBkYXRhOiBbJzIwMjAtMDMtMTUnLCAnMjAyMC0wNC0xNScsICcyMDIwLTA1LTE1JywgJzIwMjAtMDYtMTUnLCAnMjAyMC0wNi0yOSddCiAgICAgICAgICB9XSwKICAgICAgICAgIHlBeGlzOiBbewogICAgICAgICAgICB0eXBlOiAndmFsdWUnCiAgICAgICAgICB9XSwKICAgICAgICAgIHNlcmllczogbGlzdGRhdGEKICAgICAgICB9KTsKICAgICAgfSk7CiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["income.vue"],"names":[],"mappings":"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","sourcesContent":["<!--\n 描述: 营业收入\n 作者: Jack Chen\n 日期: 2020-05-09\n-->\n\n<template>\n  <div class=\"income-container\">\n    <div class=\"chart\" ref=\"myEchart\"></div>\n  </div>\n</template>\n\n<script>\n  import echarts from \"echarts\";\n  // eslint-disable-next-line no-unused-vars\n  import axios from 'axios';\n  import halloween from '../../assets/js/purple-passion';\n  //import '../../node_modules/echarts/map/js/china.js' // 引入中国地图数据\n  export default {\n    name: \"income\",\n    props: [\"userJson\"],\n    data() {\n      return {\n        chart: null,\n        listdata: []\n      };\n    },\n    mounted() {\n      this.chinaConfigure();\n    },\n    beforeDestroy() {\n      if (!this.chart) {\n        return;\n      }\n      this.chart.dispose();\n      this.chart = null;\n    },\n    methods: {\n      chinaConfigure() {\n        var instance = axios.create({ headers: {'content-type': 'application/x-www-form-urlencoded'} });\n        instance.post('http://localhost:8080/allDateConfirmedApi'\n                // eslint-disable-next-line no-undef\n        ).then(response => {\n          console.log(response.data);\n          var datak = response.data;\n          var len = response.data.length;\n          // eslint-disable-next-line no-undef\n          var listdata=[];\n          //      console.log(this.listdata);\n          for(var i=0;i<len;i++){\n            var info={};\n            info.name=datak[i].name;\n            info.type='line';\n            info.areaStyle={};\n            info.data=datak[i].data;\n            listdata.push(info);\t//把info里面的数据追加到data里\n          }\n          console.log(listdata);\n          let myChart = echarts.init(this.$refs.myEchart,'purple-passion'); //这里是为了获得容器所在位置\n          window.onresize = myChart.resize;\n          myChart.setOption({\n            backgroundColor: 'rgba(116,116,130,1)',\n            //    title: {\n            //      text: '疫情情况',\n            //       x: 'center'\n            //    },\n            grid: {\n              top: '5%',\n              left: '2%',\n              right: '2%',\n              bottom: '0%',\n              containLabel: true\n            },\n            tooltip: {\n              trigger: 'axis',\n              transitionDuration: 0.2,\n              axisPointer: {\n                type: 'cross',\n                label: {\n                  //   backgroundColor: '#6a7985'\n                }\n              }\n            },\n            legend: {\n              top: '2%',\n              data: ['英国', '印度', '俄罗斯', '巴西', '美国'],\n              left: 0\n            },\n            toolbox: {\n              feature: {\n                saveAsImage: {}\n              }\n            },\n            xAxis: [\n              {\n                type: 'category',\n                boundaryGap: false,\n                data: ['2020-03-15', '2020-04-15', '2020-05-15', '2020-06-15', '2020-06-29']\n              }\n            ],\n            yAxis: [\n              {\n                type: 'value'\n              }\n            ],\n            series: listdata\n          });\n        });\n      }\n    }\n  }\n</script>\n\n<style lang=\"scss\" scoped>\n.income-container {\n  .chart {\n    height: 3rem;\n  }\n}\n</style>\n"],"sourceRoot":"src/components/companySummary"}]}