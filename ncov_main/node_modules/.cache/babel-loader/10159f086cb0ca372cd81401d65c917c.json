{"remainingRequest":"/Users/uu/Desktop/ncov_main/node_modules/babel-loader/lib/index.js!/Users/uu/Desktop/ncov_main/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/uu/Desktop/ncov_main/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/uu/Desktop/ncov_main/src/components/mapBeijing/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/uu/Desktop/ncov_main/src/components/mapBeijing/index.vue","mtime":1598239497053},{"path":"/Users/uu/Desktop/ncov_main/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/uu/Desktop/ncov_main/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/uu/Desktop/ncov_main/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/uu/Desktop/ncov_main/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZnVuY3Rpb24ubmFtZSI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnJlZ2V4cC5leGVjIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLnJlcGxhY2UiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcuc3BsaXQiOwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwppbXBvcnQgZWNoYXJ0cyBmcm9tICJlY2hhcnRzIjsKaW1wb3J0IGF4aW9zIGZyb20gJ2F4aW9zJzsKaW1wb3J0ICcuLi8uLi8uLi9ub2RlX21vZHVsZXMvZWNoYXJ0cy9tYXAvanMvcHJvdmluY2UveGluamlhbmcuanMnOwppbXBvcnQgaGFsbG93ZWVuIGZyb20gJy4uLy4uL2Fzc2V0cy9qcy9wdXJwbGUtcGFzc2lvbic7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAibWFwWGluamlhbmciLAogIHByb3BzOiBbInVzZXJKc29uIl0sCiAgZGF0YTogZnVuY3Rpb24gZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGNoYXJ0OiBudWxsLAogICAgICBsaXN0ZGF0YTogW10KICAgIH07CiAgfSwKICBtb3VudGVkOiBmdW5jdGlvbiBtb3VudGVkKCkgewogICAgdGhpcy5jaGluYUNvbmZpZ3VyZSgpOwogIH0sCiAgYmVmb3JlRGVzdHJveTogZnVuY3Rpb24gYmVmb3JlRGVzdHJveSgpIHsKICAgIGlmICghdGhpcy5jaGFydCkgewogICAgICByZXR1cm47CiAgICB9CgogICAgdGhpcy5jaGFydC5kaXNwb3NlKCk7CiAgICB0aGlzLmNoYXJ0ID0gbnVsbDsKICB9LAogIG1ldGhvZHM6IHsKICAgIGNoaW5hQ29uZmlndXJlOiBmdW5jdGlvbiBjaGluYUNvbmZpZ3VyZSgpIHsKICAgICAgdmFyIF90aGlzID0gdGhpczsKCiAgICAgIHZhciBpbnN0YW5jZSA9IGF4aW9zLmNyZWF0ZSh7CiAgICAgICAgaGVhZGVyczogewogICAgICAgICAgJ2NvbnRlbnQtdHlwZSc6ICdhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWQnCiAgICAgICAgfQogICAgICB9KTsKICAgICAgaW5zdGFuY2UucG9zdCgnaHR0cDovL2xvY2FsaG9zdDo4MDgwL2FwaS9jdXJyZW50WGluamlhbmdDb25maXJtZWQnIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby11bmRlZgogICAgICApLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgICAgICAgY29uc29sZS5sb2cocmVzcG9uc2UuZGF0YSk7CiAgICAgICAgdmFyIGRhdGFrID0gcmVzcG9uc2UuZGF0YTsKICAgICAgICB2YXIgbGVuID0gcmVzcG9uc2UuZGF0YS5sZW5ndGg7IC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby11bmRlZgoKICAgICAgICB2YXIgbGlzdGRhdGEgPSBbXTsgLy8gICAgICBjb25zb2xlLmxvZyh0aGlzLmxpc3RkYXRhKTsKCiAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBsZW47IGkrKykgewogICAgICAgICAgdmFyIGluZm8gPSB7fTsKICAgICAgICAgIGluZm8ubmFtZSA9IGRhdGFrW2ldLm5hbWU7CiAgICAgICAgICBpbmZvLnZhbHVlID0gZGF0YWtbaV0udmFsdWU7CiAgICAgICAgICBsaXN0ZGF0YS5wdXNoKGluZm8pOyAvL+aKimluZm/ph4zpnaLnmoTmlbDmja7ov73liqDliLBkYXRh6YeMCiAgICAgICAgfQoKICAgICAgICBjb25zb2xlLmxvZyhsaXN0ZGF0YSk7CiAgICAgICAgdmFyIG15Q2hhcnQgPSBlY2hhcnRzLmluaXQoX3RoaXMuJHJlZnMubXlFY2hhcnQsICdwdXJwbGUtcGFzc2lvbicpOyAvL+i/memHjOaYr+S4uuS6huiOt+W+l+WuueWZqOaJgOWcqOS9jee9rgoKICAgICAgICB3aW5kb3cub25yZXNpemUgPSBteUNoYXJ0LnJlc2l6ZTsKICAgICAgICBteUNoYXJ0LnNldE9wdGlvbih7CiAgICAgICAgICBiYWNrZ3JvdW5kQ29sb3I6ICd0cmFuc3BhcmVudCcsCiAgICAgICAgICB0b29sdGlwOiB7CiAgICAgICAgICAgIHRyaWdnZXI6ICdpdGVtJywKICAgICAgICAgICAgc2hvd0RlbGF5OiAwLAogICAgICAgICAgICB0cmFuc2l0aW9uRHVyYXRpb246IDAuMiwKICAgICAgICAgICAgZm9ybWF0dGVyOiBmdW5jdGlvbiBmb3JtYXR0ZXIocGFyYW1zKSB7CiAgICAgICAgICAgICAgdmFyIHZhbHVlID0gKHBhcmFtcy52YWx1ZSArICcnKS5zcGxpdCgnLicpOwogICAgICAgICAgICAgIHZhbHVlID0gdmFsdWVbMF0ucmVwbGFjZSgvKFxkezEsM30pKD89KD86XGR7M30pKyg/IVxkKSkvZywgJyQxLCcpOwogICAgICAgICAgICAgIHJldHVybiBwYXJhbXMuc2VyaWVzTmFtZSArICc8YnIvPicgKyBwYXJhbXMubmFtZSArICc6ICcgKyB2YWx1ZTsKICAgICAgICAgICAgfQogICAgICAgICAgfSwKICAgICAgICAgIHZpc3VhbE1hcDogewogICAgICAgICAgICBsZWZ0OiAncmlnaHQnLAogICAgICAgICAgICBtaW46IDAsCiAgICAgICAgICAgIG1heDogMjMwLAogICAgICAgICAgICB0ZXh0OiBbJ0hpZ2gnLCAnTG93J10sCiAgICAgICAgICAgIGNhbGN1bGFibGU6IHRydWUKICAgICAgICAgIH0sCiAgICAgICAgICBzZXJpZXM6IFt7CiAgICAgICAgICAgIG5hbWU6ICfnjrDlrZjnoa7or4rkurrmlbAnLAogICAgICAgICAgICB0eXBlOiAnbWFwJywKICAgICAgICAgICAgcm9hbTogdHJ1ZSwKICAgICAgICAgICAgbWFwOiAn5paw55aGJywKICAgICAgICAgICAgZW1waGFzaXM6IHsKICAgICAgICAgICAgICBsYWJlbDogewogICAgICAgICAgICAgICAgc2hvdzogdHJ1ZQogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSwKICAgICAgICAgICAgdGV4dEZpeGVkOiB7CiAgICAgICAgICAgICAgQWxhc2thOiBbMjAsIC0yMF0KICAgICAgICAgICAgfSwKICAgICAgICAgICAgZGF0YTogbGlzdGRhdGEKICAgICAgICAgIH1dCiAgICAgICAgfSk7CiAgICAgIH0pOwogICAgfQogIH0KfTs="},{"version":3,"sources":["index.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n  <div class=\"wrap-container sn-container\">\n    <div class=\"sn-content\">\n      <div class=\"sn-title\" style=\"color: #ffffff; font-size: 18px;\">新疆现存确诊情况</div>\n      <div class=\"sn-body\" style=\"background-color: rgba(116,116,130,1)\">\n        <div class=\"wrap-container\">\n          <div class=\"echarts\">\n            <div :style=\"{height:'450px'}\" ref=\"myEchart\"></div>\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\n  import echarts from \"echarts\";\n  import axios from 'axios';\n  import '../../../node_modules/echarts/map/js/province/xinjiang.js';\n  import halloween from '../../assets/js/purple-passion';\n  export default {\n    name: \"mapXinjiang\",\n    props: [\"userJson\"],\n    data() {\n      return {\n        chart: null,\n        listdata: []\n      };\n    },\n    mounted() {\n      this.chinaConfigure();\n    },\n    beforeDestroy() {\n      if (!this.chart) {\n        return;\n      }\n      this.chart.dispose();\n      this.chart = null;\n    },\n    methods: {\n      chinaConfigure() {\n        var instance = axios.create({ headers: {'content-type': 'application/x-www-form-urlencoded'} });\n        instance.post('http://localhost:8080/api/currentXinjiangConfirmed'\n                // eslint-disable-next-line no-undef\n        ).then(response => {\n          console.log(response.data);\n          var datak = response.data;\n          var len = response.data.length;\n          // eslint-disable-next-line no-undef\n          var listdata=[];\n          //      console.log(this.listdata);\n          for(var i=0;i<len;i++){\n            var info={};\n            info.name=datak[i].name;\n            info.value=datak[i].value;\n            listdata.push(info);\t//把info里面的数据追加到data里\n          }\n          console.log(listdata);\n          let myChart = echarts.init(this.$refs.myEchart,'purple-passion'); //这里是为了获得容器所在位置\n          window.onresize = myChart.resize;\n          myChart.setOption({\n            backgroundColor: 'transparent',\n            tooltip: {\n              trigger: 'item',\n              showDelay: 0,\n              transitionDuration: 0.2,\n              formatter: function (params) {\n                var value = (params.value + '').split('.');\n                value = value[0].replace(/(\\d{1,3})(?=(?:\\d{3})+(?!\\d))/g, '$1,');\n                return params.seriesName + '<br/>' + params.name + ': ' + value;\n              }\n            },\n            visualMap: {\n              left: 'right',\n              min: 0,\n              max: 230,\n              text: ['High', 'Low'],\n              calculable: true,\n            },\n\n            series: [\n              {\n                name: '现存确诊人数',\n                type: 'map',\n                roam: true,\n                map: '新疆',\n                emphasis: {\n                  label: {\n                    show: true\n                  }\n                },\n                textFixed: {\n                  Alaska: [20, -20]\n                },\n                data: listdata\n              }\n            ]\n          });\n        });\n      }\n    }\n  }\n</script>\n\n<style lang=\"scss\" scoped>\n  .sn-container {\n    left: 50px;\n    top: 100px;\n    height: 500px;\n\n    .sn-content {\n      background-color: rgba(116,116,130,1);\n    }\n\n    %table-style {\n      width: 100%;\n      height: 20px;\n\n      table-layout: fixed;\n      tr {\n        td {\n          padding: 10px 5px;\n          text-align: center;\n          background-color: transparent;\n          white-space: nowrap;\n          overflow: hidden;\n          color: #eeeeee;\n          font-size: 16px;\n          //    font-style: inherit;\n        }\n      }\n    }\n    .table {\n      .table-header {\n        @extend %table-style;\n      }\n      .seamless-warp {\n        height: 400px;\n        overflow: hidden;\n        visibility: visible;\n        .colorRed {\n          color: #FF4669;\n        }\n        .colorOrange {\n          color: #FFC956;\n        }\n        .item {\n          height: auto;\n          @extend %table-style;\n          tr {\n            td {\n              &.title {\n                text-overflow: ellipsis;\n                display: inline-block;\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n</style>\n"],"sourceRoot":"src/components/mapBeijing"}]}