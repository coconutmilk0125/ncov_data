{"remainingRequest":"/Users/uu/Desktop/ncov_before/node_modules/babel-loader/lib/index.js!/Users/uu/Desktop/ncov_before/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/uu/Desktop/ncov_before/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/uu/Desktop/ncov_before/src/views/ddemo.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/uu/Desktop/ncov_before/src/views/ddemo.vue","mtime":1593568544402},{"path":"/Users/uu/Desktop/ncov_before/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/uu/Desktop/ncov_before/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/uu/Desktop/ncov_before/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/uu/Desktop/ncov_before/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuZnVuY3Rpb24ubmFtZSI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLnJlZ2V4cC5leGVjIjsKaW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuc3RyaW5nLnJlcGxhY2UiOwppbXBvcnQgImNvcmUtanMvbW9kdWxlcy9lcy5zdHJpbmcuc3BsaXQiOwovLwovLwovLwovLwovLwovLwppbXBvcnQgZWNoYXJ0cyBmcm9tICJlY2hhcnRzIjsgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXVudXNlZC12YXJzCgppbXBvcnQgYXhpb3MgZnJvbSAnYXhpb3MnOwppbXBvcnQgJy4uLy4uL25vZGVfbW9kdWxlcy9lY2hhcnRzL21hcC9qcy93b3JsZC5qcyc7CmltcG9ydCBoYWxsb3dlZW4gZnJvbSAnLi4vYXNzZXRzL2pzL2hhbGxvd2Vlbic7IC8vaW1wb3J0ICcuLi8uLi9ub2RlX21vZHVsZXMvZWNoYXJ0cy9tYXAvanMvY2hpbmEuanMnIC8vIOW8leWFpeS4reWbveWcsOWbvuaVsOaNrgoKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICJlY2hhcnRzIiwKICBwcm9wczogWyJ1c2VySnNvbiJdLAogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBjaGFydDogbnVsbCwKICAgICAgbGlzdGRhdGE6IFtdCiAgICB9OwogIH0sCiAgbW91bnRlZDogZnVuY3Rpb24gbW91bnRlZCgpIHsKICAgIHRoaXMuY2hpbmFDb25maWd1cmUoKTsKICB9LAogIGJlZm9yZURlc3Ryb3k6IGZ1bmN0aW9uIGJlZm9yZURlc3Ryb3koKSB7CiAgICBpZiAoIXRoaXMuY2hhcnQpIHsKICAgICAgcmV0dXJuOwogICAgfQoKICAgIHRoaXMuY2hhcnQuZGlzcG9zZSgpOwogICAgdGhpcy5jaGFydCA9IG51bGw7CiAgfSwKICBtZXRob2RzOiB7CiAgICBjaGluYUNvbmZpZ3VyZTogZnVuY3Rpb24gY2hpbmFDb25maWd1cmUoKSB7CiAgICAgIHZhciBfdGhpcyA9IHRoaXM7CgogICAgICB2YXIgaW5zdGFuY2UgPSBheGlvcy5jcmVhdGUoewogICAgICAgIGhlYWRlcnM6IHsKICAgICAgICAgICdjb250ZW50LXR5cGUnOiAnYXBwbGljYXRpb24veC13d3ctZm9ybS11cmxlbmNvZGVkJwogICAgICAgIH0KICAgICAgfSk7CiAgICAgIGluc3RhbmNlLnBvc3QoJ2h0dHA6Ly9sb2NhbGhvc3Q6ODA4MC9jdXJyZW50Q291bnRyeUNvbmZpcm1lZEFwaScgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXVuZGVmCiAgICAgICkudGhlbihmdW5jdGlvbiAocmVzcG9uc2UpIHsKICAgICAgICBjb25zb2xlLmxvZyhyZXNwb25zZS5kYXRhKTsKICAgICAgICB2YXIgZGF0YWsgPSByZXNwb25zZS5kYXRhOwogICAgICAgIHZhciBsZW4gPSByZXNwb25zZS5kYXRhLmxlbmd0aDsgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXVuZGVmCgogICAgICAgIHZhciBsaXN0ZGF0YSA9IFtdOyAvLyAgICAgIGNvbnNvbGUubG9nKHRoaXMubGlzdGRhdGEpOwoKICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGxlbjsgaSsrKSB7CiAgICAgICAgICB2YXIgaW5mbyA9IHt9OwogICAgICAgICAgaW5mby5uYW1lID0gZGF0YWtbaV0ubmFtZTsKICAgICAgICAgIGluZm8udmFsdWUgPSBkYXRha1tpXS52YWx1ZTsKICAgICAgICAgIGxpc3RkYXRhLnB1c2goaW5mbyk7IC8v5oqKaW5mb+mHjOmdoueahOaVsOaNrui/veWKoOWIsGRhdGHph4wKICAgICAgICB9CgogICAgICAgIGNvbnNvbGUubG9nKGxpc3RkYXRhKTsKICAgICAgICB2YXIgbXlDaGFydCA9IGVjaGFydHMuaW5pdChfdGhpcy4kcmVmcy5teUVjaGFydCwgJ2hhbGxvd2VlbicpOyAvL+i/memHjOaYr+S4uuS6huiOt+W+l+WuueWZqOaJgOWcqOS9jee9rgoKICAgICAgICB3aW5kb3cub25yZXNpemUgPSBteUNoYXJ0LnJlc2l6ZTsKICAgICAgICBteUNoYXJ0LnNldE9wdGlvbih7CiAgICAgICAgICBiYWNrZ3JvdW5kQ29sb3I6ICcjMzMzMzMzJywKICAgICAgICAgIHRpdGxlOiB7CiAgICAgICAgICAgIHRleHQ6ICfnlqvmg4Xmg4XlhrUnLAogICAgICAgICAgICB4OiAnY2VudGVyJwogICAgICAgICAgfSwKICAgICAgICAgIHRvb2x0aXA6IHsKICAgICAgICAgICAgdHJpZ2dlcjogJ2l0ZW0nLAogICAgICAgICAgICBzaG93RGVsYXk6IDAsCiAgICAgICAgICAgIHRyYW5zaXRpb25EdXJhdGlvbjogMC4yLAogICAgICAgICAgICBmb3JtYXR0ZXI6IGZ1bmN0aW9uIGZvcm1hdHRlcihwYXJhbXMpIHsKICAgICAgICAgICAgICB2YXIgdmFsdWUgPSAocGFyYW1zLnZhbHVlICsgJycpLnNwbGl0KCcuJyk7CiAgICAgICAgICAgICAgdmFsdWUgPSB2YWx1ZVswXS5yZXBsYWNlKC8oXGR7MSwzfSkoPz0oPzpcZHszfSkrKD8hXGQpKS9nLCAnJDEsJyk7CiAgICAgICAgICAgICAgcmV0dXJuIHBhcmFtcy5zZXJpZXNOYW1lICsgJzxici8+JyArIHBhcmFtcy5uYW1lICsgJzogJyArIHZhbHVlOwogICAgICAgICAgICB9CiAgICAgICAgICB9LAogICAgICAgICAgdmlzdWFsTWFwOiB7CiAgICAgICAgICAgIGxlZnQ6ICdyaWdodCcsCiAgICAgICAgICAgIG1pbjogMCwKICAgICAgICAgICAgbWF4OiAyMDAwMDAsCiAgICAgICAgICAgIHRleHQ6IFsnSGlnaCcsICdMb3cnXSwKICAgICAgICAgICAgLy8g5paH5pys77yM6buY6K6k5Li65pWw5YC85paH5pysCiAgICAgICAgICAgIGNhbGN1bGFibGU6IHRydWUKICAgICAgICAgIH0sCiAgICAgICAgICB0b29sYm94OiB7CiAgICAgICAgICAgIHNob3c6IHRydWUsCiAgICAgICAgICAgIC8vb3JpZW50OiAndmVydGljYWwnLAogICAgICAgICAgICBsZWZ0OiAnbGVmdCcsCiAgICAgICAgICAgIHRvcDogJ3RvcCcsCiAgICAgICAgICAgIGZlYXR1cmU6IHsKICAgICAgICAgICAgICBkYXRhVmlldzogewogICAgICAgICAgICAgICAgcmVhZE9ubHk6IGZhbHNlCiAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICByZXN0b3JlOiB7fSwKICAgICAgICAgICAgICBzYXZlQXNJbWFnZToge30KICAgICAgICAgICAgfQogICAgICAgICAgfSwKICAgICAgICAgIHNlcmllczogW3sKICAgICAgICAgICAgbmFtZTogJ+eOsOWtmOehruiviuS6uuaVsCcsCiAgICAgICAgICAgIHR5cGU6ICdtYXAnLAogICAgICAgICAgICByb2FtOiB0cnVlLAogICAgICAgICAgICBtYXA6ICd3b3JsZCcsCiAgICAgICAgICAgIGVtcGhhc2lzOiB7CiAgICAgICAgICAgICAgbGFiZWw6IHsKICAgICAgICAgICAgICAgIHNob3c6IHRydWUKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIC8vIOaWh+acrOS9jee9ruS/ruatowogICAgICAgICAgICB0ZXh0Rml4ZWQ6IHsKICAgICAgICAgICAgICBBbGFza2E6IFsyMCwgLTIwXQogICAgICAgICAgICB9LAogICAgICAgICAgICBkYXRhOiBsaXN0ZGF0YQogICAgICAgICAgfV0KICAgICAgICB9KTsKICAgICAgfSk7CiAgICB9CiAgfQp9Ow=="},{"version":3,"sources":["ddemo.vue"],"names":[],"mappings":"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","sourcesContent":["<template>\n\n    <div class=\"echarts\">\n        <div :style=\"{height:'400px',width:'600px'}\" ref=\"myEchart\"></div>\n    </div>\n</template>\n<script>\n    import echarts from \"echarts\";\n    // eslint-disable-next-line no-unused-vars\n    import axios from 'axios';\n    import '../../node_modules/echarts/map/js/world.js';\n    import halloween from '../assets/js/halloween';\n    //import '../../node_modules/echarts/map/js/china.js' // 引入中国地图数据\n    export default {\n        name: \"echarts\",\n        props: [\"userJson\"],\n        data() {\n            return {\n                chart: null,\n                listdata: []\n            };\n        },\n        mounted() {\n            this.chinaConfigure();\n        },\n        beforeDestroy() {\n            if (!this.chart) {\n                return;\n            }\n            this.chart.dispose();\n            this.chart = null;\n        },\n        methods: {\n            chinaConfigure() {\n                var instance = axios.create({ headers: {'content-type': 'application/x-www-form-urlencoded'} });\n                instance.post('http://localhost:8080/currentCountryConfirmedApi'\n                    // eslint-disable-next-line no-undef\n                ).then(response => {\n                    console.log(response.data);\n                    var datak = response.data;\n                    var len = response.data.length;\n                    // eslint-disable-next-line no-undef\n                    var listdata=[];\n              //      console.log(this.listdata);\n                    for(var i=0;i<len;i++){\n                        var info={};\n                        info.name=datak[i].name;\n                        info.value=datak[i].value;\n                        listdata.push(info);\t//把info里面的数据追加到data里\n                    }\n                    console.log(listdata);\n                    let myChart = echarts.init(this.$refs.myEchart,'halloween'); //这里是为了获得容器所在位置\n                    window.onresize = myChart.resize;\n                    myChart.setOption({\n                        backgroundColor: '#333333',\n                        title: {\n                            text: '疫情情况',\n                            x: 'center'\n                        },\n                        tooltip: {\n                            trigger: 'item',\n                            showDelay: 0,\n                            transitionDuration: 0.2,\n                            formatter: function (params) {\n                                var value = (params.value + '').split('.');\n                                value = value[0].replace(/(\\d{1,3})(?=(?:\\d{3})+(?!\\d))/g, '$1,');\n                                return params.seriesName + '<br/>' + params.name + ': ' + value;\n                            }\n                        },\n                        visualMap: {\n                            left: 'right',\n                            min: 0,\n                            max: 200000,\n                            text: ['High', 'Low'],           // 文本，默认为数值文本\n                            calculable: true,\n                        },\n                        toolbox: {\n                            show: true,\n                            //orient: 'vertical',\n                            left: 'left',\n                            top: 'top',\n                            feature: {\n                                dataView: {readOnly: false},\n                                restore: {},\n                                saveAsImage: {}\n                            }\n                        },\n                        series: [\n                            {\n                                name: '现存确诊人数',\n                                type: 'map',\n                                roam: true,\n                                map: 'world',\n                                emphasis: {\n                                    label: {\n                                        show: true\n                                    }\n                                },\n                                // 文本位置修正\n                                textFixed: {\n                                    Alaska: [20, -20]\n                                },\n                                data: listdata\n                            }\n                        ]\n                    });\n                });\n            }\n        }\n    }\n</script>\n"],"sourceRoot":"src/views"}]}