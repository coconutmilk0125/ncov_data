{"remainingRequest":"/Users/uu/Desktop/ncov_before/node_modules/babel-loader/lib/index.js!/Users/uu/Desktop/ncov_before/node_modules/cache-loader/dist/cjs.js??ref--0-0!/Users/uu/Desktop/ncov_before/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/uu/Desktop/ncov_before/src/components/worldCloud/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/uu/Desktop/ncov_before/src/components/worldCloud/index.vue","mtime":1594200231396},{"path":"/Users/uu/Desktop/ncov_before/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/uu/Desktop/ncov_before/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/uu/Desktop/ncov_before/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/uu/Desktop/ncov_before/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuam9pbiI7CmltcG9ydCAiY29yZS1qcy9tb2R1bGVzL2VzLmZ1bmN0aW9uLm5hbWUiOwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwppbXBvcnQgJy4uLy4uL2Fzc2V0cy9qcy9lY2hhcnRzLXdvcmRjbG91ZC5taW4nOwppbXBvcnQgeyBnZXRXb3JsZENsb3VkcyB9IGZyb20gJy4uLy4uL25ldHdvcmsvbmV3cyc7CmltcG9ydCBheGlvcyBmcm9tICJheGlvcyI7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAid29yZENsb3VkIiwKICBkYXRhOiBmdW5jdGlvbiBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgdGltZXI6IG51bGwsCiAgICAgIGxpc3RkYXRhOiBbXQogICAgfTsKICB9LAogIGNyZWF0ZWQ6IGZ1bmN0aW9uIGNyZWF0ZWQoKSB7CiAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgIGdldFdvcmxkQ2xvdWRzKCkudGhlbihmdW5jdGlvbiAocmVzKSB7CiAgICAgIGNvbnNvbGUubG9nKHJlcyk7CiAgICAgIF90aGlzLmxpc3REYXRhID0gcmVzLmRhdGE7CiAgICB9KTsKICB9LAogIG1vdW50ZWQ6IGZ1bmN0aW9uIG1vdW50ZWQoKSB7CiAgICB2YXIgX3RoaXMyID0gdGhpczsKCiAgICB0aGlzLmdldEVjaGFydFJpZ2h0MSgpOwogICAgdGhpcy50aW1lciA9IHNldEludGVydmFsKGZ1bmN0aW9uICgpIHsKICAgICAgX3RoaXMyLmdldEVjaGFydFJpZ2h0MSgpOwogICAgfSwgNTAwMCk7CiAgfSwKICBtZXRob2RzOiB7CiAgICBnZXRFY2hhcnRSaWdodDE6IGZ1bmN0aW9uIGdldEVjaGFydFJpZ2h0MSgpIHsKICAgICAgdmFyIF90aGlzMyA9IHRoaXM7CgogICAgICB2YXIgaW5zdGFuY2UgPSBheGlvcy5jcmVhdGUoewogICAgICAgIGhlYWRlcnM6IHsKICAgICAgICAgICdjb250ZW50LXR5cGUnOiAnYXBwbGljYXRpb24veC13d3ctZm9ybS11cmxlbmNvZGVkJwogICAgICAgIH0KICAgICAgfSk7CiAgICAgIGluc3RhbmNlLnBvc3QoJ2h0dHA6Ly9sb2NhbGhvc3Q6ODA4MC9hcGkvd29ybGRDbG91ZHMnIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby11bmRlZgogICAgICApLnRoZW4oZnVuY3Rpb24gKHJlc3BvbnNlKSB7CiAgICAgICAgY29uc29sZS5sb2cocmVzcG9uc2UuZGF0YSk7CiAgICAgICAgdmFyIGRhdGFrID0gcmVzcG9uc2UuZGF0YTsKICAgICAgICB2YXIgbGVuID0gcmVzcG9uc2UuZGF0YS5sZW5ndGg7IC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby11bmRlZgoKICAgICAgICB2YXIgbGlzdGRhdGEgPSBbXTsgLy8gICAgICBjb25zb2xlLmxvZyh0aGlzLmxpc3RkYXRhKTsKCiAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBsZW47IGkrKykgewogICAgICAgICAgdmFyIGluZm8gPSB7fTsKICAgICAgICAgIGluZm8ubmFtZSA9IGRhdGFrW2ldLm5hbWU7CiAgICAgICAgICBpbmZvLnZhbHVlID0gZGF0YWtbaV0udmFsdWU7CiAgICAgICAgICBsaXN0ZGF0YS5wdXNoKGluZm8pOyAvL+aKimluZm/ph4zpnaLnmoTmlbDmja7ov73liqDliLBkYXRh6YeMCiAgICAgICAgfQoKICAgICAgICBjb25zb2xlLmxvZyhsaXN0ZGF0YSk7CiAgICAgICAgdmFyIG15Q2hhcnQgPSBlY2hhcnRzLmluaXQoX3RoaXMzLiRyZWZzLm15RWNoYXJ0KTsKICAgICAgICB2YXIgb3B0aW9uID0gewogICAgICAgICAgLy8gdG9vbHRpcDogewogICAgICAgICAgLy8gICBzaG93OiBmYWxzZQogICAgICAgICAgLy8gfSwKICAgICAgICAgIHNlcmllczogW3sKICAgICAgICAgICAgdHlwZTogJ3dvcmRDbG91ZCcsCiAgICAgICAgICAgIGdyaWRTaXplOiAxLAogICAgICAgICAgICBzaXplUmFuZ2U6IFsxMiwgNTBdLAogICAgICAgICAgICByb3RhdGlvblJhbmdlOiBbLTkwLCA5MF0sCiAgICAgICAgICAgIHJvdGF0aW9uU3RlcDogNDUsCiAgICAgICAgICAgIHNoYXBlOiAnZGlhbW9uZCcsCiAgICAgICAgICAgIHdpZHRoOiAnOTAlJywKICAgICAgICAgICAgdGV4dFBhZGRpbmc6IDAsCiAgICAgICAgICAgIGF1dG9TaXplOiB7CiAgICAgICAgICAgICAgZW5hYmxlOiB0cnVlLAogICAgICAgICAgICAgIG1pblNpemU6IDYKICAgICAgICAgICAgfSwKICAgICAgICAgICAgdGV4dFN0eWxlOiB7CiAgICAgICAgICAgICAgbm9ybWFsOiB7CiAgICAgICAgICAgICAgICB0ZXh0Qm9yZGVyQ29sb3I6ICdyZ2JhKDI1NSwyNTUsMjU1LDEpJywKICAgICAgICAgICAgICAgIHRleHRCb3JkZXJXaWR0aDogMS41LAogICAgICAgICAgICAgICAgY29sb3I6IGZ1bmN0aW9uIGNvbG9yKCkgewogICAgICAgICAgICAgICAgICByZXR1cm4gJ3JnYignICsgW01hdGgucm91bmQoTWF0aC5yYW5kb20oKSAqIDE2MCksIE1hdGgucm91bmQoTWF0aC5yYW5kb20oKSAqIDE2MCksIE1hdGgucm91bmQoTWF0aC5yYW5kb20oKSAqIDE2MCksIDFdLmpvaW4oJywnKSArICcpJzsKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgIGVtcGhhc2lzOiB7CiAgICAgICAgICAgICAgICBmb250U2l6ZTogMjAgLy8gc2hhZG93Qmx1cjogMTAsCiAgICAgICAgICAgICAgICAvLyBzaGFkb3dDb2xvcjogJ3JnYmEoMjU1LDI1NSwyNTUsIC4xKScKCiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9LAogICAgICAgICAgICBkYXRhOiBsaXN0ZGF0YQogICAgICAgICAgfV0KICAgICAgICB9OwogICAgICAgIG15Q2hhcnQuc2V0T3B0aW9uKG9wdGlvbiwgdHJ1ZSk7CiAgICAgICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ3Jlc2l6ZScsIGZ1bmN0aW9uICgpIHsKICAgICAgICAgIG15Q2hhcnQucmVzaXplKCk7CiAgICAgICAgfSk7CiAgICAgIH0pOwogICAgfQogIH0sCiAgYmVmb3JlRGVzdHJveTogZnVuY3Rpb24gYmVmb3JlRGVzdHJveSgpIHsKICAgIGNsZWFySW50ZXJ2YWwodGhpcy50aW1lcik7CiAgfQp9Ow=="},{"version":3,"sources":["index.vue"],"names":[],"mappings":"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","sourcesContent":["\n<template>\n    <div class=\"wrap-container sn-container\">\n        <div class=\"sn-content\" style=\"background-color: rgba(116,116,130,1)\">\n            <div class=\"sn-title\" style=\"color: #ffffff\">疫情关键字</div>\n            <div class=\"sn-body\">\n                <div class=\"wrap-container\">\n                    <div class=\"chartsdom\" ref=\"myEchart\"></div>\n                </div>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\n    import '../../assets/js/echarts-wordcloud.min'\n    import {getWorldClouds} from '../../network/news'\n    import axios from \"axios\";\n\n    export default {\n        name: \"wordCloud\",\n        data() {\n            return {\n                timer: null,\n                listdata:[]\n            }\n        },\n        created() {\n            getWorldClouds().then(res => {\n                console.log(res)\n                this.listData = res.data\n            })\n        },\n        mounted() {\n            this.getEchartRight1();\n            this.timer = setInterval(() => {\n                this.getEchartRight1();\n            }, 5000)\n        },\n        methods: {\n            getEchartRight1() {\n                var instance = axios.create({ headers: {'content-type': 'application/x-www-form-urlencoded'} });\n                instance.post('http://localhost:8080/api/worldClouds'\n                    // eslint-disable-next-line no-undef\n                ).then(response => {\n                    console.log(response.data);\n                    var datak = response.data;\n                    var len = response.data.length;\n                    // eslint-disable-next-line no-undef\n                    var listdata = [];\n                    //      console.log(this.listdata);\n                    for (var i = 0; i < len; i++) {\n                        var info = {};\n                        info.name = datak[i].name;\n                        info.value = datak[i].value;\n                        listdata.push(info);\t//把info里面的数据追加到data里\n                    }\n                    console.log(listdata);\n                    let myChart = echarts.init(this.$refs.myEchart);\n                    let option = {\n                        // tooltip: {\n                        //   show: false\n                        // },\n                        series: [{\n                            type: 'wordCloud',\n                            gridSize: 1,\n                            sizeRange: [12, 50],\n                            rotationRange: [-90, 90],\n                            rotationStep: 45,\n                            shape: 'diamond',\n                            width: '90%',\n                            textPadding: 0,\n                            autoSize: {\n                                enable: true,\n                                minSize: 6\n                            },\n                            textStyle: {\n                                normal: {\n                                    textBorderColor: 'rgba(255,255,255,1)',\n                                    textBorderWidth: 1.5,\n                                    color: () => {\n                                        return 'rgb(' + [\n                                            Math.round(Math.random() * 160),\n                                            Math.round(Math.random() * 160),\n                                            Math.round(Math.random() * 160),1\n                                        ].join(',') + ')';\n                                    }\n                                },\n                                emphasis: {\n                                    fontSize: 20,\n                                    // shadowBlur: 10,\n                                    // shadowColor: 'rgba(255,255,255, .1)'\n                                }\n                            },\n                            data: listdata\n                        }]\n                    }\n                    myChart.setOption(option, true);\n                    window.addEventListener('resize', () => {\n                        myChart.resize();\n                    });\n                });\n            },\n        },\n        beforeDestroy() {\n            clearInterval(this.timer);\n        }\n    };\n</script>\n\n<style lang=\"scss\" scoped>\n    .sn-container {\n        left: 1370px;\n        top: 325px;\n        width: 500px;\n        height: 285px;\n        background-color: rgba(91,92,110,1);\n        .chartsdom {\n            width: 100%;\n            height: 100%;\n        }\n    }\n</style>\n"],"sourceRoot":"src/components/worldCloud"}]}