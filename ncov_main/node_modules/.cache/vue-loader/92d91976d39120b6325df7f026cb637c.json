{"remainingRequest":"/Users/uu/Desktop/ncov_before/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/uu/Desktop/ncov_before/src/components/worldMap/index.vue?vue&type=style&index=0&id=61fa9a7d&lang=scss&scoped=true&","dependencies":[{"path":"/Users/uu/Desktop/ncov_before/src/components/worldMap/index.vue","mtime":1594200165413},{"path":"/Users/uu/Desktop/ncov_before/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/uu/Desktop/ncov_before/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/uu/Desktop/ncov_before/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/uu/Desktop/ncov_before/node_modules/sass-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/uu/Desktop/ncov_before/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/uu/Desktop/ncov_before/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCi50cmlnbGUgewogIGxlZnQ6IDYwMHB4OwogIHRvcDogMTAwcHg7CiAgd2lkdGg6IDcyMHB4OwogIGhlaWdodDogNTAwcHg7Cn0K"},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuGA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/components/worldMap","sourcesContent":["<template>\n  <div class=\"wrap-container trigle\">\n    <div class=\"echarts\">\n      <div :style=\"{height:'500px',width:'720px'}\" ref=\"myEchart\"></div>\n    </div>\n  </div>\n\n</template>\n\n<script>\n  import echarts from \"echarts\";\n  import axios from 'axios';\n  import '../../../node_modules/echarts/map/js/world.js';\n  import halloween from '../../assets/js/purple-passion';\n  export default {\n    name: \"worldMap\",\n    props: [\"userJson\"],\n    data() {\n      return {\n        chart: null,\n        listdata: []\n      };\n    },\n    mounted() {\n      this.chinaConfigure();\n    },\n    beforeDestroy() {\n      if (!this.chart) {\n        return;\n      }\n      this.chart.dispose();\n      this.chart = null;\n    },\n    methods: {\n      chinaConfigure() {\n        var instance = axios.create({ headers: {'content-type': 'application/x-www-form-urlencoded'} });\n        instance.post('http://localhost:8080/api/currentCountryConfirmed'\n                // eslint-disable-next-line no-undef\n        ).then(response => {\n          console.log(response.data);\n          var datak = response.data;\n          var len = response.data.length;\n          // eslint-disable-next-line no-undef\n          var listdata=[];\n          //      console.log(this.listdata);\n          for(var i=0;i<len;i++){\n            var info={};\n            info.name=datak[i].name;\n            info.value=datak[i].value;\n            listdata.push(info);\t//把info里面的数据追加到data里\n          }\n          console.log(listdata);\n          let myChart = echarts.init(this.$refs.myEchart,'purple-passion'); //这里是为了获得容器所在位置\n          window.onresize = myChart.resize;\n          myChart.setOption({\n            backgroundColor: 'transparent',\n            title: {\n              text: '全球疫情概况',\n              x: 'center'\n            },\n            tooltip: {\n              trigger: 'item',\n              showDelay: 0,\n              transitionDuration: 0.2,\n              formatter: function (params) {\n                var value = (params.value + '').split('.');\n                value = value[0].replace(/(\\d{1,3})(?=(?:\\d{3})+(?!\\d))/g, '$1,');\n                return params.seriesName + '<br/>' + params.name + ': ' + value;\n              }\n            },\n            visualMap: {\n              left: 'right',\n              min: 0,\n              max: 200000,\n              text: ['High', 'Low'],\n              calculable: true,\n            },\n\n            series: [\n              {\n                name: '现存确诊人数',\n                type: 'map',\n                roam: true,\n                map: 'world',\n                emphasis: {\n                  label: {\n                    show: true\n                  }\n                },\n                textFixed: {\n                  Alaska: [20, -20]\n                },\n                data: listdata\n              }\n            ]\n          });\n        });\n      }\n    }\n  }\n</script>\n\n<style lang=\"scss\" scoped>\n  .trigle {\n    left: 600px;\n    top: 100px;\n    width: 720px;\n    height: 500px;\n  }\n</style>\n"]}]}