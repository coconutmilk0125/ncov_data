{"remainingRequest":"/Users/uu/Desktop/vueDataV-master/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/uu/Desktop/vueDataV-master/src/components/scrollArc/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/uu/Desktop/vueDataV-master/src/components/scrollArc/index.vue","mtime":1593570265699},{"path":"/Users/uu/Desktop/vueDataV-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/uu/Desktop/vueDataV-master/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/uu/Desktop/vueDataV-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/uu/Desktop/vueDataV-master/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBlY2hhcnRzIGZyb20gImVjaGFydHMiOwovLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tdW51c2VkLXZhcnMKaW1wb3J0IGF4aW9zIGZyb20gJ2F4aW9zJzsKaW1wb3J0IGhhbGxvd2VlbiBmcm9tICcuLi8uLi9hc3NldHMvanMvcHVycGxlLXBhc3Npb24nOwovL2ltcG9ydCAnLi4vLi4vbm9kZV9tb2R1bGVzL2VjaGFydHMvbWFwL2pzL2NoaW5hLmpzJyAvLyDlvJXlhaXkuK3lm73lnLDlm77mlbDmja4KZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICJzY3JvbGxBcmMiLAogIHByb3BzOiBbInVzZXJKc29uIl0sCiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIGNoYXJ0OiBudWxsLAogICAgICBsaXN0ZGF0YTogW10KICAgIH07CiAgfSwKICBtb3VudGVkKCkgewogICAgdGhpcy5jaGluYUNvbmZpZ3VyZSgpOwogIH0sCiAgYmVmb3JlRGVzdHJveSgpIHsKICAgIGlmICghdGhpcy5jaGFydCkgewogICAgICByZXR1cm47CiAgICB9CiAgICB0aGlzLmNoYXJ0LmRpc3Bvc2UoKTsKICAgIHRoaXMuY2hhcnQgPSBudWxsOwogIH0sCiAgbWV0aG9kczogewogICAgY2hpbmFDb25maWd1cmUoKSB7CiAgICAgIHZhciBpbnN0YW5jZSA9IGF4aW9zLmNyZWF0ZSh7IGhlYWRlcnM6IHsnY29udGVudC10eXBlJzogJ2FwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZCd9IH0pOwogICAgICBpbnN0YW5jZS5wb3N0KCdodHRwOi8vbG9jYWxob3N0OjgwODAvYWxsRGF0ZUNvbmZpcm1lZEFwaScKICAgICAgICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tdW5kZWYKICAgICAgKS50aGVuKHJlc3BvbnNlID0+IHsKICAgICAgICBjb25zb2xlLmxvZyhyZXNwb25zZS5kYXRhKTsKICAgICAgICB2YXIgZGF0YWsgPSByZXNwb25zZS5kYXRhOwogICAgICAgIHZhciBsZW4gPSByZXNwb25zZS5kYXRhLmxlbmd0aDsKICAgICAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tdW5kZWYKICAgICAgICB2YXIgbGlzdGRhdGE9W107CiAgICAgICAgLy8gICAgICBjb25zb2xlLmxvZyh0aGlzLmxpc3RkYXRhKTsKICAgICAgICBmb3IodmFyIGk9MDtpPGxlbjtpKyspewogICAgICAgICAgdmFyIGluZm89e307CiAgICAgICAgICBpbmZvLm5hbWU9ZGF0YWtbaV0ubmFtZTsKICAgICAgICAgIGluZm8udHlwZT0nbGluZSc7CiAgICAgICAgICBpbmZvLmFyZWFTdHlsZT17fTsKICAgICAgICAgIGluZm8uZGF0YT1kYXRha1tpXS5kYXRhOwogICAgICAgICAgbGlzdGRhdGEucHVzaChpbmZvKTsJLy/mioppbmZv6YeM6Z2i55qE5pWw5o2u6L+95Yqg5YiwZGF0YemHjAogICAgICAgIH0KICAgICAgICBjb25zb2xlLmxvZyhsaXN0ZGF0YSk7CiAgICAgICAgbGV0IG15Q2hhcnQgPSBlY2hhcnRzLmluaXQodGhpcy4kcmVmcy5teUVjaGFydCwncHVycGxlLXBhc3Npb24nKTsgLy/ov5nph4zmmK/kuLrkuobojrflvpflrrnlmajmiYDlnKjkvY3nva4KICAgICAgICB3aW5kb3cub25yZXNpemUgPSBteUNoYXJ0LnJlc2l6ZTsKICAgICAgICBteUNoYXJ0LnNldE9wdGlvbih7CiAgICAgICAgICAgICAgICAgYmFja2dyb3VuZENvbG9yOiAncmdiYSgxMTYsMTE2LDEzMCwxKScsCiAgICAgIC8vICAgIHRpdGxlOiB7CiAgICAgIC8vICAgICAgdGV4dDogJ+eWq+aDheaDheWGtScsCiAgICAgLy8gICAgICAgeDogJ2NlbnRlcicKICAgICAgLy8gICAgfSwKICAgICAgICAgIGdyaWQ6IHsKICAgICAgICAgICAgYm90dG9tOiA1MAogICAgICAgICAgfSwKICAgICAgICAgIHRvb2x0aXA6IHsKICAgICAgICAgICAgdHJpZ2dlcjogJ2F4aXMnLAogICAgICAgICAgICB0cmFuc2l0aW9uRHVyYXRpb246IDAuMiwKICAgICAgICAgICAgYXhpc1BvaW50ZXI6IHsKICAgICAgICAgICAgICB0eXBlOiAnY3Jvc3MnLAogICAgICAgICAgICAgIGxhYmVsOiB7CiAgICAgICAgICAgICAgICAvLyAgIGJhY2tncm91bmRDb2xvcjogJyM2YTc5ODUnCiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9CiAgICAgICAgICB9LAogICAgICAgICAgbGVnZW5kOiB7CiAgICAgICAgICAgIGRhdGE6IFsn6Iux5Zu9JywgJ+WNsOW6picsICfkv4TnvZfmlq8nLCAn5be06KW/JywgJ+e+juWbvSddLAogICAgICAgICAgICBsZWZ0OiAwCiAgICAgICAgICB9LAogICAgICAgICAgdG9vbGJveDogewogICAgICAgICAgICBmZWF0dXJlOiB7CiAgICAgICAgICAgICAgc2F2ZUFzSW1hZ2U6IHt9CiAgICAgICAgICAgIH0KICAgICAgICAgIH0sCiAgICAgICAgICB4QXhpczogWwogICAgICAgICAgICB7CiAgICAgICAgICAgICAgdHlwZTogJ2NhdGVnb3J5JywKICAgICAgICAgICAgICBib3VuZGFyeUdhcDogZmFsc2UsCiAgICAgICAgICAgICAgZGF0YTogWycyMDIwLTAzLTE1JywgJzIwMjAtMDQtMTUnLCAnMjAyMC0wNS0xNScsICcyMDIwLTA2LTE1JywgJzIwMjAtMDctMDEnXQogICAgICAgICAgICB9CiAgICAgICAgICBdLAogICAgICAgICAgeUF4aXM6IFsKICAgICAgICAgICAgewogICAgICAgICAgICAgIHR5cGU6ICd2YWx1ZScKICAgICAgICAgICAgfQogICAgICAgICAgXSwKICAgICAgICAgIHNlcmllczogbGlzdGRhdGEKICAgICAgICB9KTsKICAgICAgfSk7CiAgICB9CiAgfQp9Cg=="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;AAqBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/components/scrollArc","sourcesContent":["<!--\n 描述: 滚动弧形线\n 作者: Jack Chen\n 日期: 2020-04-20\n-->\n\n<template>\n  <div class=\"wrap-container sn-container\">\n    <div class=\"sn-content\" style=\"background-color: rgba(116,116,130,1)\">\n      <div class=\"sn-title\" style=\"color: #ffffff\">重点国家确诊人数变化</div>\n      <div class=\"sn-body\">\n        <div class=\"wrap-container\">\n          <div class=\"chartsdom\" ref=\"myEchart\"></div>\n        </div>\n      </div>\n    </div>\n\n  </div>\n</template>\n\n<script>\n  import echarts from \"echarts\";\n  // eslint-disable-next-line no-unused-vars\n  import axios from 'axios';\n  import halloween from '../../assets/js/purple-passion';\n  //import '../../node_modules/echarts/map/js/china.js' // 引入中国地图数据\n  export default {\n    name: \"scrollArc\",\n    props: [\"userJson\"],\n    data() {\n      return {\n        chart: null,\n        listdata: []\n      };\n    },\n    mounted() {\n      this.chinaConfigure();\n    },\n    beforeDestroy() {\n      if (!this.chart) {\n        return;\n      }\n      this.chart.dispose();\n      this.chart = null;\n    },\n    methods: {\n      chinaConfigure() {\n        var instance = axios.create({ headers: {'content-type': 'application/x-www-form-urlencoded'} });\n        instance.post('http://localhost:8080/allDateConfirmedApi'\n                // eslint-disable-next-line no-undef\n        ).then(response => {\n          console.log(response.data);\n          var datak = response.data;\n          var len = response.data.length;\n          // eslint-disable-next-line no-undef\n          var listdata=[];\n          //      console.log(this.listdata);\n          for(var i=0;i<len;i++){\n            var info={};\n            info.name=datak[i].name;\n            info.type='line';\n            info.areaStyle={};\n            info.data=datak[i].data;\n            listdata.push(info);\t//把info里面的数据追加到data里\n          }\n          console.log(listdata);\n          let myChart = echarts.init(this.$refs.myEchart,'purple-passion'); //这里是为了获得容器所在位置\n          window.onresize = myChart.resize;\n          myChart.setOption({\n                   backgroundColor: 'rgba(116,116,130,1)',\n        //    title: {\n        //      text: '疫情情况',\n       //       x: 'center'\n        //    },\n            grid: {\n              bottom: 50\n            },\n            tooltip: {\n              trigger: 'axis',\n              transitionDuration: 0.2,\n              axisPointer: {\n                type: 'cross',\n                label: {\n                  //   backgroundColor: '#6a7985'\n                }\n              }\n            },\n            legend: {\n              data: ['英国', '印度', '俄罗斯', '巴西', '美国'],\n              left: 0\n            },\n            toolbox: {\n              feature: {\n                saveAsImage: {}\n              }\n            },\n            xAxis: [\n              {\n                type: 'category',\n                boundaryGap: false,\n                data: ['2020-03-15', '2020-04-15', '2020-05-15', '2020-06-15', '2020-07-01']\n              }\n            ],\n            yAxis: [\n              {\n                type: 'value'\n              }\n            ],\n            series: listdata\n          });\n        });\n      }\n    }\n  }\n</script>\n\n<style lang=\"scss\" scoped>\n.sn-container {\n  left: 50px;\n  top: 640px;\n  width: 880px;\n  height: 400px;\n  background-color: rgba(91,92,110,1);\n  .chartsdom {\n    width: 100%;\n    height: 95%;\n  }\n}\n</style>\n"]}]}