{"remainingRequest":"/Users/uu/Desktop/ncov_main/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/uu/Desktop/ncov_main/src/components/increasedLine/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/uu/Desktop/ncov_main/src/components/increasedLine/index.vue","mtime":1594130566421},{"path":"/Users/uu/Desktop/ncov_main/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/uu/Desktop/ncov_main/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/uu/Desktop/ncov_main/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/uu/Desktop/ncov_main/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBlY2hhcnRzIGZyb20gImVjaGFydHMiOwppbXBvcnQgYXhpb3MgZnJvbSAnYXhpb3MnOwppbXBvcnQgaGFsbG93ZWVuIGZyb20gJy4uLy4uL2Fzc2V0cy9qcy9wdXJwbGUtcGFzc2lvbic7CmV4cG9ydCBkZWZhdWx0IHsKICBuYW1lOiAiaW5jcmVhc2VkTGluZSIsCiAgcHJvcHM6IFsidXNlckpzb24iXSwKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgY2hhcnQ6IG51bGwsCiAgICAgIGNvdW50cnk6IFtdLAogICAgICBkYXRlOiBbXSwKICAgICAgaW5jcmVhc2VkMTpbXSwKICAgICAgaW5jcmVhc2VkMjpbXSwKICAgICAgaW5jcmVhc2VkMzpbXSwKICAgICAgaW5jcmVhc2VkNDpbXQogICAgfTsKICB9LAogIG1vdW50ZWQoKSB7CiAgICB0aGlzLmNoaW5hQ29uZmlndXJlKCk7CiAgfSwKICBiZWZvcmVEZXN0cm95KCkgewogICAgaWYgKCF0aGlzLmNoYXJ0KSB7CiAgICAgIHJldHVybjsKICAgIH0KICAgIHRoaXMuY2hhcnQuZGlzcG9zZSgpOwogICAgdGhpcy5jaGFydCA9IG51bGw7CiAgfSwKICBtZXRob2RzOiB7CiAgICBjaGluYUNvbmZpZ3VyZSgpIHsKICAgICAgdmFyIGluc3RhbmNlID0gYXhpb3MuY3JlYXRlKHsgaGVhZGVyczogeydjb250ZW50LXR5cGUnOiAnYXBwbGljYXRpb24veC13d3ctZm9ybS11cmxlbmNvZGVkJ30gfSk7CiAgICAgIGluc3RhbmNlLnBvc3QoJ2h0dHA6Ly9sb2NhbGhvc3Q6ODA4MC9hcGkvY29uZmlybWVkSW5jcmVhc2VkJwogICAgICAgICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby11bmRlZgogICAgICApLnRoZW4ocmVzcG9uc2UgPT4gewogICAgICAgIGNvbnNvbGUubG9nKHJlc3BvbnNlLmRhdGEpOwogICAgICAgIHZhciBkYXRhayA9IHJlc3BvbnNlLmRhdGE7CiAgICAgICAgdmFyIGxlbiA9IHJlc3BvbnNlLmRhdGEubGVuZ3RoOwogICAgICAgIHZhciBjb3VudHJ5PVtdOwogICAgICAgIHZhciBkYXRlPWRhdGFrWzBdLmRhdGU7CiAgICAgICAgdmFyIGluY3JlYXNlZDE9ZGF0YWtbMF0uaW5jcmVhc2VkOwogICAgICAgIHZhciBpbmNyZWFzZWQyPWRhdGFrWzFdLmluY3JlYXNlZDsKICAgICAgICB2YXIgaW5jcmVhc2VkMz1kYXRha1syXS5pbmNyZWFzZWQ7CiAgICAgICAgdmFyIGluY3JlYXNlZDQ9ZGF0YWtbM10uaW5jcmVhc2VkOwogICAgICAgIGZvcih2YXIgaT0wO2k8bGVuO2krKyl7CiAgICAgICAgICBjb3VudHJ5LnB1c2goZGF0YWtbaV0uY291bnRyeSk7CiAgICAgICAgfQogICAgICAgIGxldCBteUNoYXJ0ID0gZWNoYXJ0cy5pbml0KHRoaXMuJHJlZnMubXlFY2hhcnQsJ3B1cnBsZS1wYXNzaW9uJyk7IC8v6L+Z6YeM5piv5Li65LqG6I635b6X5a655Zmo5omA5Zyo5L2N572uCiAgICAgICAgd2luZG93Lm9ucmVzaXplID0gbXlDaGFydC5yZXNpemU7CiAgICAgICAgbXlDaGFydC5zZXRPcHRpb24oewogICAgICAgICAgYmFja2dyb3VuZENvbG9yOiAncmdiYSgxMTYsMTE2LDEzMCwxKScsCiAgICAgICAgICB0b29sdGlwOiB7CiAgICAgICAgICAgIHRyaWdnZXI6ICdheGlzJywKICAgICAgICAgICAgYXhpc1BvaW50ZXI6IHsKICAgICAgICAgICAgICB0eXBlOiAnc2hhZG93JwogICAgICAgICAgICB9CiAgICAgICAgICB9LAogICAgICAgICAgZ3JpZDogewogICAgICAgICAgICBsZWZ0OiA4MCwKICAgICAgICAgICAgYm90dG9tOiA1MAogICAgICAgICAgfSwKICAgICAgICAgIHhBeGlzOiB7CiAgICAgICAgICAgIHR5cGU6ICdjYXRlZ29yeScsCiAgICAgICAgICAgIGRhdGE6ZGF0ZQogICAgICAgICAgfSwKICAgICAgICAgIHlBeGlzOiB7CiAgICAgICAgICAgIHR5cGU6ICd2YWx1ZScKICAgICAgICAgIH0sCiAgICAgICAgICBzZXJpZXM6IFsKICAgICAgICAgICAgewogICAgICAgICAgICAgIG5hbWU6ICfnvo7lm70nLAogICAgICAgICAgICAgIHR5cGU6ICdsaW5lJywKICAgICAgICAgICAgICBkYXRhOiBpbmNyZWFzZWQxCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICBuYW1lOiAn5be06KW/JywKICAgICAgICAgICAgICB0eXBlOiAnbGluZScsCiAgICAgICAgICAgICAgZGF0YTogaW5jcmVhc2VkMgogICAgICAgICAgICB9LAogICAgICAgICAgICB7CiAgICAgICAgICAgICAgbmFtZTogJ+S/hOe9l+aWrycsCiAgICAgICAgICAgICAgdHlwZTogJ2xpbmUnLAogICAgICAgICAgICAgIGRhdGE6IGluY3JlYXNlZDMKICAgICAgICAgICAgfSwKICAgICAgICAgICAgewogICAgICAgICAgICAgIG5hbWU6ICfoi7Hlm70nLAogICAgICAgICAgICAgIHR5cGU6ICdsaW5lJywKICAgICAgICAgICAgICBkYXRhOiBpbmNyZWFzZWQ0CiAgICAgICAgICAgIH0KICAgICAgICAgIF0KICAgICAgICB9KTsKICAgICAgfSk7CiAgICB9CiAgfQp9Owo="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;AAcA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/components/increasedLine","sourcesContent":["<template>\n  <div class=\"wrap-container sn-container\">\n    <div class=\"sn-content\" style=\"background-color: rgba(116,116,130,1)\">\n      <div class=\"sn-title\" style=\"color: #ffffff\">重点国家每日新增确诊</div>\n      <div class=\"sn-body\">\n        <div class=\"wrap-container\">\n          <div class=\"chartsdom\" ref=\"myEchart\"></div>\n        </div>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\n  import echarts from \"echarts\";\n  import axios from 'axios';\n  import halloween from '../../assets/js/purple-passion';\n  export default {\n    name: \"increasedLine\",\n    props: [\"userJson\"],\n    data() {\n      return {\n        chart: null,\n        country: [],\n        date: [],\n        increased1:[],\n        increased2:[],\n        increased3:[],\n        increased4:[]\n      };\n    },\n    mounted() {\n      this.chinaConfigure();\n    },\n    beforeDestroy() {\n      if (!this.chart) {\n        return;\n      }\n      this.chart.dispose();\n      this.chart = null;\n    },\n    methods: {\n      chinaConfigure() {\n        var instance = axios.create({ headers: {'content-type': 'application/x-www-form-urlencoded'} });\n        instance.post('http://localhost:8080/api/confirmedIncreased'\n                // eslint-disable-next-line no-undef\n        ).then(response => {\n          console.log(response.data);\n          var datak = response.data;\n          var len = response.data.length;\n          var country=[];\n          var date=datak[0].date;\n          var increased1=datak[0].increased;\n          var increased2=datak[1].increased;\n          var increased3=datak[2].increased;\n          var increased4=datak[3].increased;\n          for(var i=0;i<len;i++){\n            country.push(datak[i].country);\n          }\n          let myChart = echarts.init(this.$refs.myEchart,'purple-passion'); //这里是为了获得容器所在位置\n          window.onresize = myChart.resize;\n          myChart.setOption({\n            backgroundColor: 'rgba(116,116,130,1)',\n            tooltip: {\n              trigger: 'axis',\n              axisPointer: {\n                type: 'shadow'\n              }\n            },\n            grid: {\n              left: 80,\n              bottom: 50\n            },\n            xAxis: {\n              type: 'category',\n              data:date\n            },\n            yAxis: {\n              type: 'value'\n            },\n            series: [\n              {\n                name: '美国',\n                type: 'line',\n                data: increased1\n              },\n              {\n                name: '巴西',\n                type: 'line',\n                data: increased2\n              },\n              {\n                name: '俄罗斯',\n                type: 'line',\n                data: increased3\n              },\n              {\n                name: '英国',\n                type: 'line',\n                data: increased4\n              }\n            ]\n          });\n        });\n      }\n    }\n  };\n</script>\n\n<style lang=\"scss\" scoped>\n  .sn-container {\n    left: 1320px;\n    top: 640px;\n    width: 550px;\n    height: 400px;\n    background-color: rgba(91,92,110,1);\n    .chartsdom {\n      width: 100%;\n      height: 100%;\n    }\n  }\n</style>\n"]}]}