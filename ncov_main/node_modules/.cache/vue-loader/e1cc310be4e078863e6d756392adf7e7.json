{"remainingRequest":"/Users/uu/Desktop/vueDataV-master/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/uu/Desktop/vueDataV-master/src/components/pyramid/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/uu/Desktop/vueDataV-master/src/components/pyramid/index.vue","mtime":1593095217649},{"path":"/Users/uu/Desktop/vueDataV-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/uu/Desktop/vueDataV-master/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/uu/Desktop/vueDataV-master/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/uu/Desktop/vueDataV-master/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBlY2hhcnRzIGZyb20gImVjaGFydHMiOwppbXBvcnQgJy4uLy4uLy4uL25vZGVfbW9kdWxlcy9lY2hhcnRzL21hcC9qcy9jaGluYS5qcycKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICJlY2hhcnRzIiwKICBwcm9wczogWyJ1c2VySnNvbiJdLAogIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICBjaGFydDogbnVsbAogICAgfTsKICB9LAogIG1vdW50ZWQoKSB7CiAgICB0aGlzLmNoaW5hQ29uZmlndXJlKCk7CiAgfSwKICBiZWZvcmVEZXN0cm95KCkgewogICAgaWYgKCF0aGlzLmNoYXJ0KSB7CiAgICAgIHJldHVybjsKICAgIH0KICAgIHRoaXMuY2hhcnQuZGlzcG9zZSgpOwogICAgdGhpcy5jaGFydCA9IG51bGw7CiAgfSwKICBtZXRob2RzOiB7CiAgICBjaGluYUNvbmZpZ3VyZSgpIHsKICAgICAgY29uc29sZS5sb2codGhpcy51c2VySnNvbikKICAgICAgbGV0IG15Q2hhcnQgPSBlY2hhcnRzLmluaXQodGhpcy4kcmVmcy5teUVjaGFydCk7IC8v6L+Z6YeM5piv5Li65LqG6I635b6X5a655Zmo5omA5Zyo5L2N572uCiAgICAgIHdpbmRvdy5vbnJlc2l6ZSA9IG15Q2hhcnQucmVzaXplOwogICAgICBteUNoYXJ0LnNldE9wdGlvbih7IC8vIOi/m+ihjOebuOWFs+mFjee9rgogICAgICAgIHRpdGxlIDogewogICAgICAgICAgdGV4dDogJ+eWq+aDheaDheWGtScsCiAgICAgICAgICB4OidjZW50ZXInCiAgICAgICAgfSwKICAgICAgICB0b29sdGlwOiB7fSwgLy8g6byg5qCH56e75Yiw5Zu+6YeM6Z2i55qE5rWu5Yqo5o+Q56S65qGGCiAgICAgICAgZGF0YVJhbmdlOiB7CiAgICAgICAgICBzaG93OiBmYWxzZSwKICAgICAgICAgIG1pbjogMCwKICAgICAgICAgIG1heDogMTAwMCwKICAgICAgICAgIHRleHQ6IFsnSGlnaCcsICdMb3cnXSwKICAgICAgICAgIHJlYWx0aW1lOiB0cnVlLAogICAgICAgICAgY2FsY3VsYWJsZTogdHJ1ZSwKICAgICAgICAgIGNvbG9yOiBbJ29yYW5nZXJlZCcsICd5ZWxsb3cnLCAnbGlnaHRza3libHVlJ10KICAgICAgICB9LAogICAgICAgIGdlbzogeyAvLyDov5nkuKrmmK/ph43ngrnphY3nva7ljLoKICAgICAgICAgIG1hcDogJ2NoaW5hJywgLy8g6KGo56S65Lit5Zu95Zyw5Zu+CiAgICAgICAgICByb2FtOiB0cnVlLAogICAgICAgICAgbGFiZWw6IHsKICAgICAgICAgICAgbm9ybWFsOiB7CiAgICAgICAgICAgICAgc2hvdzogdHJ1ZSwgLy8g5piv5ZCm5pi+56S65a+55bqU5Zyw5ZCNCiAgICAgICAgICAgICAgdGV4dFN0eWxlOiB7CiAgICAgICAgICAgICAgICBjb2xvcjogJ3JnYmEoMCwwLDAsMC40KScKICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0KICAgICAgICAgIH0sCiAgICAgICAgICBpdGVtU3R5bGU6IHsKICAgICAgICAgICAgbm9ybWFsOiB7CiAgICAgICAgICAgICAgYm9yZGVyQ29sb3I6ICdyZ2JhKDAsIDAsIDAsIDAuMiknCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIGVtcGhhc2lzOiB7CiAgICAgICAgICAgICAgYXJlYUNvbG9yOiBudWxsLAogICAgICAgICAgICAgIHNoYWRvd09mZnNldFg6IDAsCiAgICAgICAgICAgICAgc2hhZG93T2Zmc2V0WTogMCwKICAgICAgICAgICAgICBzaGFkb3dCbHVyOiAyMCwKICAgICAgICAgICAgICBib3JkZXJXaWR0aDogMCwKICAgICAgICAgICAgICBzaGFkb3dDb2xvcjogJ3JnYmEoMCwgMCwgMCwgMC41KScKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sCiAgICAgICAgc2VyaWVzOiBbewogICAgICAgICAgdHlwZTogJ3NjYXR0ZXInLAogICAgICAgICAgY29vcmRpbmF0ZVN5c3RlbTogJ2dlbycgLy8g5a+55bqU5LiK5pa56YWN572uCiAgICAgICAgfSwKICAgICAgICAgIHsKICAgICAgICAgICAgbmFtZTogJ+WQr+WKqOasoeaVsCcsIC8vIOa1ruWKqOahhueahOagh+mimAogICAgICAgICAgICB0eXBlOiAnbWFwJywKICAgICAgICAgICAgZ2VvSW5kZXg6IDAsCiAgICAgICAgICAgIGRhdGE6IFt7CiAgICAgICAgICAgICAgIm5hbWUiOiAi5YyX5LqsIiwKICAgICAgICAgICAgICAidmFsdWUiOiA1OTkKICAgICAgICAgICAgfSwgewogICAgICAgICAgICAgICJuYW1lIjogIuS4iua1tyIsCiAgICAgICAgICAgICAgInZhbHVlIjogMTQyCiAgICAgICAgICAgIH0sIHsKICAgICAgICAgICAgICAibmFtZSI6ICLpu5HpvpnmsZ8iLAogICAgICAgICAgICAgICJ2YWx1ZSI6IDQ0CiAgICAgICAgICAgIH0sIHsKICAgICAgICAgICAgICAibmFtZSI6ICLmt7HlnLMiLAogICAgICAgICAgICAgICJ2YWx1ZSI6IDkyCiAgICAgICAgICAgIH0sIHsKICAgICAgICAgICAgICAibmFtZSI6ICLmuZbljJciLAogICAgICAgICAgICAgICJ2YWx1ZSI6IDgxMAogICAgICAgICAgICB9LCB7CiAgICAgICAgICAgICAgIm5hbWUiOiAi5Zub5bedIiwKICAgICAgICAgICAgICAidmFsdWUiOiA0NTMKICAgICAgICAgICAgfV0KICAgICAgICAgIH0KICAgICAgICBdCiAgICAgIH0pCiAgICB9CiAgfQp9Cg=="},{"version":3,"sources":["index.vue"],"names":[],"mappingsfile":"index.vue","sourceRoot":"src/components/pyramid","sourcesContent":["<!--\n 描述: 金字塔动画\n 作者: Jack Chen\n 日期: 2020-04-19\n-->\n\n<template>\n  <div :style=\"{height:'500px',width:'720px',left:'600px',top:'150px'}\" ref=\"myEchart\"></div>\n</template>\n\n<script>\n  import echarts from \"echarts\";\n  import '../../../node_modules/echarts/map/js/china.js'\n  export default {\n    name: \"echarts\",\n    props: [\"userJson\"],\n    data() {\n      return {\n        chart: null\n      };\n    },\n    mounted() {\n      this.chinaConfigure();\n    },\n    beforeDestroy() {\n      if (!this.chart) {\n        return;\n      }\n      this.chart.dispose();\n      this.chart = null;\n    },\n    methods: {\n      chinaConfigure() {\n        console.log(this.userJson)\n        let myChart = echarts.init(this.$refs.myEchart); //这里是为了获得容器所在位置\n        window.onresize = myChart.resize;\n        myChart.setOption({ // 进行相关配置\n          title : {\n            text: '疫情情况',\n            x:'center'\n          },\n          tooltip: {}, // 鼠标移到图里面的浮动提示框\n          dataRange: {\n            show: false,\n            min: 0,\n            max: 1000,\n            text: ['High', 'Low'],\n            realtime: true,\n            calculable: true,\n            color: ['orangered', 'yellow', 'lightskyblue']\n          },\n          geo: { // 这个是重点配置区\n            map: 'china', // 表示中国地图\n            roam: true,\n            label: {\n              normal: {\n                show: true, // 是否显示对应地名\n                textStyle: {\n                  color: 'rgba(0,0,0,0.4)'\n                }\n              }\n            },\n            itemStyle: {\n              normal: {\n                borderColor: 'rgba(0, 0, 0, 0.2)'\n              },\n              emphasis: {\n                areaColor: null,\n                shadowOffsetX: 0,\n                shadowOffsetY: 0,\n                shadowBlur: 20,\n                borderWidth: 0,\n                shadowColor: 'rgba(0, 0, 0, 0.5)'\n              }\n            }\n          },\n          series: [{\n            type: 'scatter',\n            coordinateSystem: 'geo' // 对应上方配置\n          },\n            {\n              name: '启动次数', // 浮动框的标题\n              type: 'map',\n              geoIndex: 0,\n              data: [{\n                \"name\": \"北京\",\n                \"value\": 599\n              }, {\n                \"name\": \"上海\",\n                \"value\": 142\n              }, {\n                \"name\": \"黑龙江\",\n                \"value\": 44\n              }, {\n                \"name\": \"深圳\",\n                \"value\": 92\n              }, {\n                \"name\": \"湖北\",\n                \"value\": 810\n              }, {\n                \"name\": \"四川\",\n                \"value\": 453\n              }]\n            }\n          ]\n        })\n      }\n    }\n  }\n</script>\n"]}]}