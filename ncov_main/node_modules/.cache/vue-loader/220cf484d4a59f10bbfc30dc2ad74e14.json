{"remainingRequest":"/Users/uu/Desktop/ncov_before/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/uu/Desktop/ncov_before/src/components/worldMap/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/uu/Desktop/ncov_before/src/components/worldMap/index.vue","mtime":1594200165413},{"path":"/Users/uu/Desktop/ncov_before/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/uu/Desktop/ncov_before/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/uu/Desktop/ncov_before/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/uu/Desktop/ncov_before/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCBlY2hhcnRzIGZyb20gImVjaGFydHMiOwppbXBvcnQgYXhpb3MgZnJvbSAnYXhpb3MnOwppbXBvcnQgJy4uLy4uLy4uL25vZGVfbW9kdWxlcy9lY2hhcnRzL21hcC9qcy93b3JsZC5qcyc7CmltcG9ydCBoYWxsb3dlZW4gZnJvbSAnLi4vLi4vYXNzZXRzL2pzL3B1cnBsZS1wYXNzaW9uJzsKZXhwb3J0IGRlZmF1bHQgewogIG5hbWU6ICJ3b3JsZE1hcCIsCiAgcHJvcHM6IFsidXNlckpzb24iXSwKICBkYXRhKCkgewogICAgcmV0dXJuIHsKICAgICAgY2hhcnQ6IG51bGwsCiAgICAgIGxpc3RkYXRhOiBbXQogICAgfTsKICB9LAogIG1vdW50ZWQoKSB7CiAgICB0aGlzLmNoaW5hQ29uZmlndXJlKCk7CiAgfSwKICBiZWZvcmVEZXN0cm95KCkgewogICAgaWYgKCF0aGlzLmNoYXJ0KSB7CiAgICAgIHJldHVybjsKICAgIH0KICAgIHRoaXMuY2hhcnQuZGlzcG9zZSgpOwogICAgdGhpcy5jaGFydCA9IG51bGw7CiAgfSwKICBtZXRob2RzOiB7CiAgICBjaGluYUNvbmZpZ3VyZSgpIHsKICAgICAgdmFyIGluc3RhbmNlID0gYXhpb3MuY3JlYXRlKHsgaGVhZGVyczogeydjb250ZW50LXR5cGUnOiAnYXBwbGljYXRpb24veC13d3ctZm9ybS11cmxlbmNvZGVkJ30gfSk7CiAgICAgIGluc3RhbmNlLnBvc3QoJ2h0dHA6Ly9sb2NhbGhvc3Q6ODA4MC9hcGkvY3VycmVudENvdW50cnlDb25maXJtZWQnCiAgICAgICAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXVuZGVmCiAgICAgICkudGhlbihyZXNwb25zZSA9PiB7CiAgICAgICAgY29uc29sZS5sb2cocmVzcG9uc2UuZGF0YSk7CiAgICAgICAgdmFyIGRhdGFrID0gcmVzcG9uc2UuZGF0YTsKICAgICAgICB2YXIgbGVuID0gcmVzcG9uc2UuZGF0YS5sZW5ndGg7CiAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXVuZGVmCiAgICAgICAgdmFyIGxpc3RkYXRhPVtdOwogICAgICAgIC8vICAgICAgY29uc29sZS5sb2codGhpcy5saXN0ZGF0YSk7CiAgICAgICAgZm9yKHZhciBpPTA7aTxsZW47aSsrKXsKICAgICAgICAgIHZhciBpbmZvPXt9OwogICAgICAgICAgaW5mby5uYW1lPWRhdGFrW2ldLm5hbWU7CiAgICAgICAgICBpbmZvLnZhbHVlPWRhdGFrW2ldLnZhbHVlOwogICAgICAgICAgbGlzdGRhdGEucHVzaChpbmZvKTsJLy/mioppbmZv6YeM6Z2i55qE5pWw5o2u6L+95Yqg5YiwZGF0YemHjAogICAgICAgIH0KICAgICAgICBjb25zb2xlLmxvZyhsaXN0ZGF0YSk7CiAgICAgICAgbGV0IG15Q2hhcnQgPSBlY2hhcnRzLmluaXQodGhpcy4kcmVmcy5teUVjaGFydCwncHVycGxlLXBhc3Npb24nKTsgLy/ov5nph4zmmK/kuLrkuobojrflvpflrrnlmajmiYDlnKjkvY3nva4KICAgICAgICB3aW5kb3cub25yZXNpemUgPSBteUNoYXJ0LnJlc2l6ZTsKICAgICAgICBteUNoYXJ0LnNldE9wdGlvbih7CiAgICAgICAgICBiYWNrZ3JvdW5kQ29sb3I6ICd0cmFuc3BhcmVudCcsCiAgICAgICAgICB0aXRsZTogewogICAgICAgICAgICB0ZXh0OiAn5YWo55CD55ar5oOF5qaC5Ya1JywKICAgICAgICAgICAgeDogJ2NlbnRlcicKICAgICAgICAgIH0sCiAgICAgICAgICB0b29sdGlwOiB7CiAgICAgICAgICAgIHRyaWdnZXI6ICdpdGVtJywKICAgICAgICAgICAgc2hvd0RlbGF5OiAwLAogICAgICAgICAgICB0cmFuc2l0aW9uRHVyYXRpb246IDAuMiwKICAgICAgICAgICAgZm9ybWF0dGVyOiBmdW5jdGlvbiAocGFyYW1zKSB7CiAgICAgICAgICAgICAgdmFyIHZhbHVlID0gKHBhcmFtcy52YWx1ZSArICcnKS5zcGxpdCgnLicpOwogICAgICAgICAgICAgIHZhbHVlID0gdmFsdWVbMF0ucmVwbGFjZSgvKFxkezEsM30pKD89KD86XGR7M30pKyg/IVxkKSkvZywgJyQxLCcpOwogICAgICAgICAgICAgIHJldHVybiBwYXJhbXMuc2VyaWVzTmFtZSArICc8YnIvPicgKyBwYXJhbXMubmFtZSArICc6ICcgKyB2YWx1ZTsKICAgICAgICAgICAgfQogICAgICAgICAgfSwKICAgICAgICAgIHZpc3VhbE1hcDogewogICAgICAgICAgICBsZWZ0OiAncmlnaHQnLAogICAgICAgICAgICBtaW46IDAsCiAgICAgICAgICAgIG1heDogMjAwMDAwLAogICAgICAgICAgICB0ZXh0OiBbJ0hpZ2gnLCAnTG93J10sCiAgICAgICAgICAgIGNhbGN1bGFibGU6IHRydWUsCiAgICAgICAgICB9LAoKICAgICAgICAgIHNlcmllczogWwogICAgICAgICAgICB7CiAgICAgICAgICAgICAgbmFtZTogJ+eOsOWtmOehruiviuS6uuaVsCcsCiAgICAgICAgICAgICAgdHlwZTogJ21hcCcsCiAgICAgICAgICAgICAgcm9hbTogdHJ1ZSwKICAgICAgICAgICAgICBtYXA6ICd3b3JsZCcsCiAgICAgICAgICAgICAgZW1waGFzaXM6IHsKICAgICAgICAgICAgICAgIGxhYmVsOiB7CiAgICAgICAgICAgICAgICAgIHNob3c6IHRydWUKICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgIHRleHRGaXhlZDogewogICAgICAgICAgICAgICAgQWxhc2thOiBbMjAsIC0yMF0KICAgICAgICAgICAgICB9LAogICAgICAgICAgICAgIGRhdGE6IGxpc3RkYXRhCiAgICAgICAgICAgIH0KICAgICAgICAgIF0KICAgICAgICB9KTsKICAgICAgfSk7CiAgICB9CiAgfQp9Cg=="},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;AAUA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/components/worldMap","sourcesContent":["<template>\n  <div class=\"wrap-container trigle\">\n    <div class=\"echarts\">\n      <div :style=\"{height:'500px',width:'720px'}\" ref=\"myEchart\"></div>\n    </div>\n  </div>\n\n</template>\n\n<script>\n  import echarts from \"echarts\";\n  import axios from 'axios';\n  import '../../../node_modules/echarts/map/js/world.js';\n  import halloween from '../../assets/js/purple-passion';\n  export default {\n    name: \"worldMap\",\n    props: [\"userJson\"],\n    data() {\n      return {\n        chart: null,\n        listdata: []\n      };\n    },\n    mounted() {\n      this.chinaConfigure();\n    },\n    beforeDestroy() {\n      if (!this.chart) {\n        return;\n      }\n      this.chart.dispose();\n      this.chart = null;\n    },\n    methods: {\n      chinaConfigure() {\n        var instance = axios.create({ headers: {'content-type': 'application/x-www-form-urlencoded'} });\n        instance.post('http://localhost:8080/api/currentCountryConfirmed'\n                // eslint-disable-next-line no-undef\n        ).then(response => {\n          console.log(response.data);\n          var datak = response.data;\n          var len = response.data.length;\n          // eslint-disable-next-line no-undef\n          var listdata=[];\n          //      console.log(this.listdata);\n          for(var i=0;i<len;i++){\n            var info={};\n            info.name=datak[i].name;\n            info.value=datak[i].value;\n            listdata.push(info);\t//把info里面的数据追加到data里\n          }\n          console.log(listdata);\n          let myChart = echarts.init(this.$refs.myEchart,'purple-passion'); //这里是为了获得容器所在位置\n          window.onresize = myChart.resize;\n          myChart.setOption({\n            backgroundColor: 'transparent',\n            title: {\n              text: '全球疫情概况',\n              x: 'center'\n            },\n            tooltip: {\n              trigger: 'item',\n              showDelay: 0,\n              transitionDuration: 0.2,\n              formatter: function (params) {\n                var value = (params.value + '').split('.');\n                value = value[0].replace(/(\\d{1,3})(?=(?:\\d{3})+(?!\\d))/g, '$1,');\n                return params.seriesName + '<br/>' + params.name + ': ' + value;\n              }\n            },\n            visualMap: {\n              left: 'right',\n              min: 0,\n              max: 200000,\n              text: ['High', 'Low'],\n              calculable: true,\n            },\n\n            series: [\n              {\n                name: '现存确诊人数',\n                type: 'map',\n                roam: true,\n                map: 'world',\n                emphasis: {\n                  label: {\n                    show: true\n                  }\n                },\n                textFixed: {\n                  Alaska: [20, -20]\n                },\n                data: listdata\n              }\n            ]\n          });\n        });\n      }\n    }\n  }\n</script>\n\n<style lang=\"scss\" scoped>\n  .trigle {\n    left: 600px;\n    top: 100px;\n    width: 720px;\n    height: 500px;\n  }\n</style>\n"]}]}