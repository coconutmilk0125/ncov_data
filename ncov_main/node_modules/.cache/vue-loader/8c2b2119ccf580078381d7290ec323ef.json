{"remainingRequest":"/Users/uu/Desktop/ncov_before/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/uu/Desktop/ncov_before/src/components/companySummary/wordCloud.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/uu/Desktop/ncov_before/src/components/companySummary/wordCloud.vue","mtime":1594128260335},{"path":"/Users/uu/Desktop/ncov_before/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/uu/Desktop/ncov_before/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/uu/Desktop/ncov_before/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/uu/Desktop/ncov_before/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCAnQC9hc3NldHMvanMvZWNoYXJ0cy13b3JkY2xvdWQubWluJwppbXBvcnQge2dldFdvcmxkQ2xvdWRzfSBmcm9tICcuLi8uLi9uZXR3b3JrL25ld3MnCmltcG9ydCBheGlvcyBmcm9tICJheGlvcyI7CgpleHBvcnQgZGVmYXVsdCB7CiAgbmFtZTogIndvcmRDbG91ZCIsCiAgZGF0YSgpIHsKICAgIHJldHVybiB7CiAgICAgIHRpbWVyOiBudWxsLAogICAgICBsaXN0ZGF0YTpbXQogICAgfQogIH0sCiAgY3JlYXRlZCgpIHsKICAgIGdldFdvcmxkQ2xvdWRzKCkudGhlbihyZXMgPT4gewogICAgICBjb25zb2xlLmxvZyhyZXMpCiAgICAgIHRoaXMubGlzdERhdGEgPSByZXMuZGF0YQogICAgfSkKICB9LAogIG1vdW50ZWQoKSB7CiAgICB0aGlzLmdldEVjaGFydFJpZ2h0MSgpOwogICAgdGhpcy50aW1lciA9IHNldEludGVydmFsKCgpID0+IHsKICAgICAgdGhpcy5nZXRFY2hhcnRSaWdodDEoKTsKICAgIH0sIDUwMDApCiAgfSwKICBtZXRob2RzOiB7CiAgICBnZXRFY2hhcnRSaWdodDEoKSB7CiAgICAgIHZhciBpbnN0YW5jZSA9IGF4aW9zLmNyZWF0ZSh7IGhlYWRlcnM6IHsnY29udGVudC10eXBlJzogJ2FwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZCd9IH0pOwogICAgICBpbnN0YW5jZS5wb3N0KCdodHRwOi8vbG9jYWxob3N0OjgwODAvYXBpL3dvcmxkQ2xvdWRzJwogICAgICAgICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby11bmRlZgogICAgICApLnRoZW4ocmVzcG9uc2UgPT4gewogICAgICAgIGNvbnNvbGUubG9nKHJlc3BvbnNlLmRhdGEpOwogICAgICAgIHZhciBkYXRhayA9IHJlc3BvbnNlLmRhdGE7CiAgICAgICAgdmFyIGxlbiA9IHJlc3BvbnNlLmRhdGEubGVuZ3RoOwogICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby11bmRlZgogICAgICAgIHZhciBsaXN0ZGF0YSA9IFtdOwogICAgICAgIC8vICAgICAgY29uc29sZS5sb2codGhpcy5saXN0ZGF0YSk7CiAgICAgICAgZm9yICh2YXIgaSA9IDA7IGkgPCBsZW47IGkrKykgewogICAgICAgICAgdmFyIGluZm8gPSB7fTsKICAgICAgICAgIGluZm8ubmFtZSA9IGRhdGFrW2ldLm5hbWU7CiAgICAgICAgICBpbmZvLnZhbHVlID0gZGF0YWtbaV0udmFsdWU7CiAgICAgICAgICBsaXN0ZGF0YS5wdXNoKGluZm8pOwkvL+aKimluZm/ph4zpnaLnmoTmlbDmja7ov73liqDliLBkYXRh6YeMCiAgICAgICAgfQogICAgICAgIGNvbnNvbGUubG9nKGxpc3RkYXRhKTsKICAgICAgICBsZXQgbXlDaGFydCA9IGVjaGFydHMuaW5pdChkb2N1bWVudC5nZXRFbGVtZW50QnlJZCgnY2hhcnRfcmlnaHQxJykpOwogICAgICAgIGxldCBvcHRpb24gPSB7CiAgICAgICAgICAvLyB0b29sdGlwOiB7CiAgICAgICAgICAvLyAgIHNob3c6IGZhbHNlCiAgICAgICAgICAvLyB9LAogICAgICAgICAgc2VyaWVzOiBbewogICAgICAgICAgICB0eXBlOiAnd29yZENsb3VkJywKICAgICAgICAgICAgZ3JpZFNpemU6IDEsCiAgICAgICAgICAgIHNpemVSYW5nZTogWzEyLCA1MF0sCiAgICAgICAgICAgIHJvdGF0aW9uUmFuZ2U6IFstOTAsIDkwXSwKICAgICAgICAgICAgcm90YXRpb25TdGVwOiA0NSwKICAgICAgICAgICAgc2hhcGU6ICdkaWFtb25kJywKICAgICAgICAgICAgd2lkdGg6ICc5MCUnLAogICAgICAgICAgICB0ZXh0UGFkZGluZzogMCwKICAgICAgICAgICAgYXV0b1NpemU6IHsKICAgICAgICAgICAgICBlbmFibGU6IHRydWUsCiAgICAgICAgICAgICAgbWluU2l6ZTogNgogICAgICAgICAgICB9LAogICAgICAgICAgICB0ZXh0U3R5bGU6IHsKICAgICAgICAgICAgICBub3JtYWw6IHsKICAgICAgICAgICAgICAgIHRleHRCb3JkZXJDb2xvcjogJ3JnYmEoMjU1LDI1NSwyNTUsMC4zKScsCiAgICAgICAgICAgICAgICB0ZXh0Qm9yZGVyV2lkdGg6IDEsCiAgICAgICAgICAgICAgICBjb2xvcjogKCkgPT4gewogICAgICAgICAgICAgICAgICByZXR1cm4gJ3JnYignICsgWwogICAgICAgICAgICAgICAgICAgIE1hdGgucm91bmQoTWF0aC5yYW5kb20oKSAqIDE2MCksCiAgICAgICAgICAgICAgICAgICAgTWF0aC5yb3VuZChNYXRoLnJhbmRvbSgpICogMTYwKSwKICAgICAgICAgICAgICAgICAgICBNYXRoLnJvdW5kKE1hdGgucmFuZG9tKCkgKiAxNjApCiAgICAgICAgICAgICAgICAgIF0uam9pbignLCcpICsgJyknOwogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgZW1waGFzaXM6IHsKICAgICAgICAgICAgICAgIGZvbnRTaXplOiAyMCwKICAgICAgICAgICAgICAgIC8vIHNoYWRvd0JsdXI6IDEwLAogICAgICAgICAgICAgICAgLy8gc2hhZG93Q29sb3I6ICdyZ2JhKDI1NSwyNTUsMjU1LCAuMSknCiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9LAogICAgICAgICAgICBkYXRhOiBsaXN0ZGF0YQogICAgICAgICAgfV0KICAgICAgICB9CiAgICAgIG15Q2hhcnQuc2V0T3B0aW9uKG9wdGlvbiwgdHJ1ZSk7CiAgICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdyZXNpemUnLCAoKSA9PiB7CiAgICAgICAgbXlDaGFydC5yZXNpemUoKTsKICAgICAgfSk7CiAgICAgIH0pOwogICAgfSwKICB9LAogIGJlZm9yZURlc3Ryb3koKSB7CiAgICBjbGVhckludGVydmFsKHRoaXMudGltZXIpOwogIH0KfTsK"},{"version":3,"sources":["wordCloud.vue"],"names":[],"mappings":";;;;;;;;;;;;;AAaA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"wordCloud.vue","sourceRoot":"src/components/companySummary","sourcesContent":["<!--\n 描述: 产品热词\n 作者: Jack Chen\n 日期: 2020-05-09\n-->\n\n<template>\n  <div class=\"word-container\">\n    <div class=\"chart\" id=\"chart_right1\"></div>\n  </div>\n</template>\n\n<script>\nimport '@/assets/js/echarts-wordcloud.min'\nimport {getWorldClouds} from '../../network/news'\nimport axios from \"axios\";\n\nexport default {\n  name: \"wordCloud\",\n  data() {\n    return {\n      timer: null,\n      listdata:[]\n    }\n  },\n  created() {\n    getWorldClouds().then(res => {\n      console.log(res)\n      this.listData = res.data\n    })\n  },\n  mounted() {\n    this.getEchartRight1();\n    this.timer = setInterval(() => {\n      this.getEchartRight1();\n    }, 5000)\n  },\n  methods: {\n    getEchartRight1() {\n      var instance = axios.create({ headers: {'content-type': 'application/x-www-form-urlencoded'} });\n      instance.post('http://localhost:8080/api/worldClouds'\n              // eslint-disable-next-line no-undef\n      ).then(response => {\n        console.log(response.data);\n        var datak = response.data;\n        var len = response.data.length;\n        // eslint-disable-next-line no-undef\n        var listdata = [];\n        //      console.log(this.listdata);\n        for (var i = 0; i < len; i++) {\n          var info = {};\n          info.name = datak[i].name;\n          info.value = datak[i].value;\n          listdata.push(info);\t//把info里面的数据追加到data里\n        }\n        console.log(listdata);\n        let myChart = echarts.init(document.getElementById('chart_right1'));\n        let option = {\n          // tooltip: {\n          //   show: false\n          // },\n          series: [{\n            type: 'wordCloud',\n            gridSize: 1,\n            sizeRange: [12, 50],\n            rotationRange: [-90, 90],\n            rotationStep: 45,\n            shape: 'diamond',\n            width: '90%',\n            textPadding: 0,\n            autoSize: {\n              enable: true,\n              minSize: 6\n            },\n            textStyle: {\n              normal: {\n                textBorderColor: 'rgba(255,255,255,0.3)',\n                textBorderWidth: 1,\n                color: () => {\n                  return 'rgb(' + [\n                    Math.round(Math.random() * 160),\n                    Math.round(Math.random() * 160),\n                    Math.round(Math.random() * 160)\n                  ].join(',') + ')';\n                }\n              },\n              emphasis: {\n                fontSize: 20,\n                // shadowBlur: 10,\n                // shadowColor: 'rgba(255,255,255, .1)'\n              }\n            },\n            data: listdata\n          }]\n        }\n      myChart.setOption(option, true);\n      window.addEventListener('resize', () => {\n        myChart.resize();\n      });\n      });\n    },\n  },\n  beforeDestroy() {\n    clearInterval(this.timer);\n  }\n};\n</script>\n\n<style lang=\"scss\" scoped>\n.word-container {\n  .chart {\n    height: 3rem;\n  }\n}\n</style>\n"]}]}