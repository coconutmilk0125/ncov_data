{"remainingRequest":"/Users/uu/Desktop/ncov_before/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/uu/Desktop/ncov_before/src/components/worldCloud/index.vue?vue&type=script&lang=js&","dependencies":[{"path":"/Users/uu/Desktop/ncov_before/src/components/worldCloud/index.vue","mtime":1594200231396},{"path":"/Users/uu/Desktop/ncov_before/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/uu/Desktop/ncov_before/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/Users/uu/Desktop/ncov_before/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/uu/Desktop/ncov_before/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:Ly8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KLy8KCmltcG9ydCAnLi4vLi4vYXNzZXRzL2pzL2VjaGFydHMtd29yZGNsb3VkLm1pbicKaW1wb3J0IHtnZXRXb3JsZENsb3Vkc30gZnJvbSAnLi4vLi4vbmV0d29yay9uZXdzJwppbXBvcnQgYXhpb3MgZnJvbSAiYXhpb3MiOwoKZXhwb3J0IGRlZmF1bHQgewogICAgbmFtZTogIndvcmRDbG91ZCIsCiAgICBkYXRhKCkgewogICAgICAgIHJldHVybiB7CiAgICAgICAgICAgIHRpbWVyOiBudWxsLAogICAgICAgICAgICBsaXN0ZGF0YTpbXQogICAgICAgIH0KICAgIH0sCiAgICBjcmVhdGVkKCkgewogICAgICAgIGdldFdvcmxkQ2xvdWRzKCkudGhlbihyZXMgPT4gewogICAgICAgICAgICBjb25zb2xlLmxvZyhyZXMpCiAgICAgICAgICAgIHRoaXMubGlzdERhdGEgPSByZXMuZGF0YQogICAgICAgIH0pCiAgICB9LAogICAgbW91bnRlZCgpIHsKICAgICAgICB0aGlzLmdldEVjaGFydFJpZ2h0MSgpOwogICAgICAgIHRoaXMudGltZXIgPSBzZXRJbnRlcnZhbCgoKSA9PiB7CiAgICAgICAgICAgIHRoaXMuZ2V0RWNoYXJ0UmlnaHQxKCk7CiAgICAgICAgfSwgNTAwMCkKICAgIH0sCiAgICBtZXRob2RzOiB7CiAgICAgICAgZ2V0RWNoYXJ0UmlnaHQxKCkgewogICAgICAgICAgICB2YXIgaW5zdGFuY2UgPSBheGlvcy5jcmVhdGUoeyBoZWFkZXJzOiB7J2NvbnRlbnQtdHlwZSc6ICdhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWQnfSB9KTsKICAgICAgICAgICAgaW5zdGFuY2UucG9zdCgnaHR0cDovL2xvY2FsaG9zdDo4MDgwL2FwaS93b3JsZENsb3VkcycKICAgICAgICAgICAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby11bmRlZgogICAgICAgICAgICApLnRoZW4ocmVzcG9uc2UgPT4gewogICAgICAgICAgICAgICAgY29uc29sZS5sb2cocmVzcG9uc2UuZGF0YSk7CiAgICAgICAgICAgICAgICB2YXIgZGF0YWsgPSByZXNwb25zZS5kYXRhOwogICAgICAgICAgICAgICAgdmFyIGxlbiA9IHJlc3BvbnNlLmRhdGEubGVuZ3RoOwogICAgICAgICAgICAgICAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLXVuZGVmCiAgICAgICAgICAgICAgICB2YXIgbGlzdGRhdGEgPSBbXTsKICAgICAgICAgICAgICAgIC8vICAgICAgY29uc29sZS5sb2codGhpcy5saXN0ZGF0YSk7CiAgICAgICAgICAgICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGxlbjsgaSsrKSB7CiAgICAgICAgICAgICAgICAgICAgdmFyIGluZm8gPSB7fTsKICAgICAgICAgICAgICAgICAgICBpbmZvLm5hbWUgPSBkYXRha1tpXS5uYW1lOwogICAgICAgICAgICAgICAgICAgIGluZm8udmFsdWUgPSBkYXRha1tpXS52YWx1ZTsKICAgICAgICAgICAgICAgICAgICBsaXN0ZGF0YS5wdXNoKGluZm8pOwkvL+aKimluZm/ph4zpnaLnmoTmlbDmja7ov73liqDliLBkYXRh6YeMCiAgICAgICAgICAgICAgICB9CiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhsaXN0ZGF0YSk7CiAgICAgICAgICAgICAgICBsZXQgbXlDaGFydCA9IGVjaGFydHMuaW5pdCh0aGlzLiRyZWZzLm15RWNoYXJ0KTsKICAgICAgICAgICAgICAgIGxldCBvcHRpb24gPSB7CiAgICAgICAgICAgICAgICAgICAgLy8gdG9vbHRpcDogewogICAgICAgICAgICAgICAgICAgIC8vICAgc2hvdzogZmFsc2UKICAgICAgICAgICAgICAgICAgICAvLyB9LAogICAgICAgICAgICAgICAgICAgIHNlcmllczogW3sKICAgICAgICAgICAgICAgICAgICAgICAgdHlwZTogJ3dvcmRDbG91ZCcsCiAgICAgICAgICAgICAgICAgICAgICAgIGdyaWRTaXplOiAxLAogICAgICAgICAgICAgICAgICAgICAgICBzaXplUmFuZ2U6IFsxMiwgNTBdLAogICAgICAgICAgICAgICAgICAgICAgICByb3RhdGlvblJhbmdlOiBbLTkwLCA5MF0sCiAgICAgICAgICAgICAgICAgICAgICAgIHJvdGF0aW9uU3RlcDogNDUsCiAgICAgICAgICAgICAgICAgICAgICAgIHNoYXBlOiAnZGlhbW9uZCcsCiAgICAgICAgICAgICAgICAgICAgICAgIHdpZHRoOiAnOTAlJywKICAgICAgICAgICAgICAgICAgICAgICAgdGV4dFBhZGRpbmc6IDAsCiAgICAgICAgICAgICAgICAgICAgICAgIGF1dG9TaXplOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICBlbmFibGU6IHRydWUsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBtaW5TaXplOiA2CiAgICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICAgIHRleHRTdHlsZTogewogICAgICAgICAgICAgICAgICAgICAgICAgICAgbm9ybWFsOiB7CiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGV4dEJvcmRlckNvbG9yOiAncmdiYSgyNTUsMjU1LDI1NSwxKScsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgdGV4dEJvcmRlcldpZHRoOiAxLjUsCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgY29sb3I6ICgpID0+IHsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuICdyZ2IoJyArIFsKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIE1hdGgucm91bmQoTWF0aC5yYW5kb20oKSAqIDE2MCksCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBNYXRoLnJvdW5kKE1hdGgucmFuZG9tKCkgKiAxNjApLAogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgTWF0aC5yb3VuZChNYXRoLnJhbmRvbSgpICogMTYwKSwxCiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIF0uam9pbignLCcpICsgJyknOwogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAgICAgICAgICAgICBlbXBoYXNpczogewogICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZvbnRTaXplOiAyMCwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyBzaGFkb3dCbHVyOiAxMCwKICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAvLyBzaGFkb3dDb2xvcjogJ3JnYmEoMjU1LDI1NSwyNTUsIC4xKScKICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICAgICAgICAgICAgfSwKICAgICAgICAgICAgICAgICAgICAgICAgZGF0YTogbGlzdGRhdGEKICAgICAgICAgICAgICAgICAgICB9XQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgICAgbXlDaGFydC5zZXRPcHRpb24ob3B0aW9uLCB0cnVlKTsKICAgICAgICAgICAgICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdyZXNpemUnLCAoKSA9PiB7CiAgICAgICAgICAgICAgICAgICAgbXlDaGFydC5yZXNpemUoKTsKICAgICAgICAgICAgICAgIH0pOwogICAgICAgICAgICB9KTsKICAgICAgICB9LAogICAgfSwKICAgIGJlZm9yZURlc3Ryb3koKSB7CiAgICAgICAgY2xlYXJJbnRlcnZhbCh0aGlzLnRpbWVyKTsKICAgIH0KfTsK"},{"version":3,"sources":["index.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;AAeA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA","file":"index.vue","sourceRoot":"src/components/worldCloud","sourcesContent":["\n<template>\n    <div class=\"wrap-container sn-container\">\n        <div class=\"sn-content\" style=\"background-color: rgba(116,116,130,1)\">\n            <div class=\"sn-title\" style=\"color: #ffffff\">疫情关键字</div>\n            <div class=\"sn-body\">\n                <div class=\"wrap-container\">\n                    <div class=\"chartsdom\" ref=\"myEchart\"></div>\n                </div>\n            </div>\n        </div>\n    </div>\n</template>\n\n<script>\n    import '../../assets/js/echarts-wordcloud.min'\n    import {getWorldClouds} from '../../network/news'\n    import axios from \"axios\";\n\n    export default {\n        name: \"wordCloud\",\n        data() {\n            return {\n                timer: null,\n                listdata:[]\n            }\n        },\n        created() {\n            getWorldClouds().then(res => {\n                console.log(res)\n                this.listData = res.data\n            })\n        },\n        mounted() {\n            this.getEchartRight1();\n            this.timer = setInterval(() => {\n                this.getEchartRight1();\n            }, 5000)\n        },\n        methods: {\n            getEchartRight1() {\n                var instance = axios.create({ headers: {'content-type': 'application/x-www-form-urlencoded'} });\n                instance.post('http://localhost:8080/api/worldClouds'\n                    // eslint-disable-next-line no-undef\n                ).then(response => {\n                    console.log(response.data);\n                    var datak = response.data;\n                    var len = response.data.length;\n                    // eslint-disable-next-line no-undef\n                    var listdata = [];\n                    //      console.log(this.listdata);\n                    for (var i = 0; i < len; i++) {\n                        var info = {};\n                        info.name = datak[i].name;\n                        info.value = datak[i].value;\n                        listdata.push(info);\t//把info里面的数据追加到data里\n                    }\n                    console.log(listdata);\n                    let myChart = echarts.init(this.$refs.myEchart);\n                    let option = {\n                        // tooltip: {\n                        //   show: false\n                        // },\n                        series: [{\n                            type: 'wordCloud',\n                            gridSize: 1,\n                            sizeRange: [12, 50],\n                            rotationRange: [-90, 90],\n                            rotationStep: 45,\n                            shape: 'diamond',\n                            width: '90%',\n                            textPadding: 0,\n                            autoSize: {\n                                enable: true,\n                                minSize: 6\n                            },\n                            textStyle: {\n                                normal: {\n                                    textBorderColor: 'rgba(255,255,255,1)',\n                                    textBorderWidth: 1.5,\n                                    color: () => {\n                                        return 'rgb(' + [\n                                            Math.round(Math.random() * 160),\n                                            Math.round(Math.random() * 160),\n                                            Math.round(Math.random() * 160),1\n                                        ].join(',') + ')';\n                                    }\n                                },\n                                emphasis: {\n                                    fontSize: 20,\n                                    // shadowBlur: 10,\n                                    // shadowColor: 'rgba(255,255,255, .1)'\n                                }\n                            },\n                            data: listdata\n                        }]\n                    }\n                    myChart.setOption(option, true);\n                    window.addEventListener('resize', () => {\n                        myChart.resize();\n                    });\n                });\n            },\n        },\n        beforeDestroy() {\n            clearInterval(this.timer);\n        }\n    };\n</script>\n\n<style lang=\"scss\" scoped>\n    .sn-container {\n        left: 1370px;\n        top: 325px;\n        width: 500px;\n        height: 285px;\n        background-color: rgba(91,92,110,1);\n        .chartsdom {\n            width: 100%;\n            height: 100%;\n        }\n    }\n</style>\n"]}]}